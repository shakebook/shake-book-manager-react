[{"/Users/yangjiafeng/web-src/shake-book-manager/src/index.tsx":"1","/Users/yangjiafeng/web-src/shake-book-manager/src/store/index.ts":"2","/Users/yangjiafeng/web-src/shake-book-manager/src/App.tsx":"3","/Users/yangjiafeng/web-src/shake-book-manager/src/store/rootReducer.js":"4","/Users/yangjiafeng/web-src/shake-book-manager/src/reportWebVitals.ts":"5","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/store/reducer.ts":"6","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/list/store/reducer.ts":"7","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/count/store/reducer.ts":"8","/Users/yangjiafeng/web-src/shake-book-manager/src/router/index.ts":"9","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/list/store/types.ts":"10","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/store/types.ts":"11","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/count/store/types.ts":"12","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/index.tsx":"13","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/login/index.tsx":"14","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/content.tsx":"15","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/sidebar_menus.tsx":"16","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/logo.tsx":"17","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/collapsed_button.tsx":"18","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/router/index.ts":"19","/Users/yangjiafeng/web-src/shake-book-manager/src/service/api/v1/account_pb.js":"20","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/index.tsx":"21","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/index.tsx":"22","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/login/store/actions.ts":"23","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/index.tsx":"24","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/store/actions.ts":"25","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/store/types.ts":"26","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/store/reducer.ts":"27","/Users/yangjiafeng/web-src/shake-book-manager/src/requestAPI.ts":"28","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/actions.ts":"29","/Users/yangjiafeng/web-src/shake-book-manager/src/service/api/v1/manager_pb.js":"30","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/types.ts":"31","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/reducer.ts":"32","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/store/actions.ts":"33","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/store/types.ts":"34","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/store/reducer.ts":"35","/Users/yangjiafeng/web-src/shake-book-manager/src/common/icon.ts":"36","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/index.tsx":"37","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/actions.ts":"38","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/types.ts":"39","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/reducer.ts":"40","/Users/yangjiafeng/web-src/shake-book-manager/src/common/token.ts":"41","/Users/yangjiafeng/web-src/shake-book-manager/src/common/toTree.ts":"42","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/home/index.tsx":"43","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/store/actions.ts":"44"},{"size":470,"mtime":1613971013170,"results":"45","hashOfConfig":"46"},{"size":356,"mtime":1613796745319,"results":"47","hashOfConfig":"46"},{"size":511,"mtime":1613888765744,"results":"48","hashOfConfig":"46"},{"size":706,"mtime":1613984719810,"results":"49","hashOfConfig":"46"},{"size":425,"mtime":1613796745307,"results":"50","hashOfConfig":"46"},{"size":499,"mtime":1614089501104,"results":"51","hashOfConfig":"46"},{"size":1186,"mtime":1613796745304,"results":"52","hashOfConfig":"46"},{"size":426,"mtime":1613796745290,"results":"53","hashOfConfig":"46"},{"size":256,"mtime":1613796745309,"results":"54","hashOfConfig":"46"},{"size":352,"mtime":1613796745303,"results":"55","hashOfConfig":"46"},{"size":173,"mtime":1614090098086,"results":"56","hashOfConfig":"46"},{"size":221,"mtime":1613796745289,"results":"57","hashOfConfig":"46"},{"size":876,"mtime":1614089531283,"results":"58","hashOfConfig":"46"},{"size":2051,"mtime":1614056296956,"results":"59","hashOfConfig":"46"},{"size":391,"mtime":1613888825376,"results":"60","hashOfConfig":"46"},{"size":2049,"mtime":1614054724833,"results":"61","hashOfConfig":"46"},{"size":1203,"mtime":1613820516291,"results":"62","hashOfConfig":"46"},{"size":802,"mtime":1614090026404,"results":"63","hashOfConfig":"46"},{"size":489,"mtime":1614056119192,"results":"64","hashOfConfig":"46"},{"size":71086,"mtime":1614131952767,"results":"65","hashOfConfig":"46"},{"size":4688,"mtime":1614036333115,"results":"66","hashOfConfig":"46"},{"size":5299,"mtime":1614231291218,"results":"67","hashOfConfig":"46"},{"size":909,"mtime":1613875011483,"results":"68","hashOfConfig":"46"},{"size":1821,"mtime":1614090270682,"results":"69","hashOfConfig":"46"},{"size":4915,"mtime":1614047879044,"results":"70","hashOfConfig":"46"},{"size":709,"mtime":1614048461844,"results":"71","hashOfConfig":"46"},{"size":949,"mtime":1614049691348,"results":"72","hashOfConfig":"46"},{"size":604,"mtime":1614089239365,"results":"73","hashOfConfig":"46"},{"size":6401,"mtime":1614036240325,"results":"74","hashOfConfig":"46"},{"size":88316,"mtime":1614131959603,"results":"75","hashOfConfig":"46"},{"size":732,"mtime":1613988076670,"results":"76","hashOfConfig":"46"},{"size":728,"mtime":1613988151541,"results":"77","hashOfConfig":"46"},{"size":5557,"mtime":1614231310219,"results":"78","hashOfConfig":"46"},{"size":476,"mtime":1613969667537,"results":"79","hashOfConfig":"46"},{"size":426,"mtime":1613916559053,"results":"80","hashOfConfig":"46"},{"size":189,"mtime":1614054373375,"results":"81","hashOfConfig":"46"},{"size":4374,"mtime":1614050032468,"results":"82","hashOfConfig":"46"},{"size":3523,"mtime":1614036203332,"results":"83","hashOfConfig":"46"},{"size":511,"mtime":1613993910755,"results":"84","hashOfConfig":"46"},{"size":628,"mtime":1613993613188,"results":"85","hashOfConfig":"46"},{"size":92,"mtime":1613994234467,"results":"86","hashOfConfig":"46"},{"size":1475,"mtime":1614047404429,"results":"87","hashOfConfig":"46"},{"size":5442,"mtime":1614089299736,"results":"88","hashOfConfig":"46"},{"size":81,"mtime":1614090133331,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1vwxrrs",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"92"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yangjiafeng/web-src/shake-book-manager/src/index.tsx",[],["187","188"],"/Users/yangjiafeng/web-src/shake-book-manager/src/store/index.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/App.tsx",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/store/rootReducer.js",[],["189","190"],"/Users/yangjiafeng/web-src/shake-book-manager/src/reportWebVitals.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/store/reducer.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/list/store/reducer.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/count/store/reducer.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/router/index.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/list/store/types.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/store/types.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/count/store/types.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/index.tsx",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/login/index.tsx",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/content.tsx",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/sidebar_menus.tsx",["191","192","193","194","195","196"],"import * as React from 'react';\nimport { Menu } from 'antd';\nimport {\n  AppstoreOutlined,\n  PieChartOutlined,\n  DesktopOutlined,\n  ContainerOutlined,\n  MailOutlined,\n\n} from '@ant-design/icons';\nimport IconFont from '@/common/icon';\nimport { RootStore } from '@/store';\nimport { useSelector } from 'react-redux';\nimport { Link } from \"react-router-dom\";\nimport * as menuTypes from '@/pages/content/pages/menu/store/types'\n\nconst { SubMenu } = Menu;\n\nconst SiderBarMenus: React.FC = () => {\n  const homeState = useSelector((state: RootStore) => state.home);\n  const headerState = useSelector((state: RootStore) => state.header);\n\n  //递归菜单\n  const mapMenuList = (menus: menuTypes.MenuTree[]) => {\n    console.log(\"menus:\", menus)\n    if (menus.length != 0) {\n      return (\n        menus.map(i => {\n          if (i.children && i.children.length > 0) {\n            return (\n              <SubMenu\n                key={i.value}\n                title={<span>\n                  <IconFont style={{ color: \"#fff\", fontSize: \"20px\", fontWeight: \"bold\" }} type={i.menuIcon} />\n                  <span>{i.title}</span>\n                </span>\n                }\n              >\n                {mapMenuList(i.children)}\n              </SubMenu>\n            )\n          } else {\n            return <Menu.Item key={i.value}>\n              <Link to={i.menuRouter}>{i.title}</Link>\n            </Menu.Item>\n          }\n        })\n      )\n    }\n\n  }\n  return (\n    <div style={{ width: homeState.collapsed ? 80 : 256 }}>\n      <Menu\n        defaultSelectedKeys={['1']}\n        defaultOpenKeys={[]}\n        mode=\"inline\"\n        theme=\"dark\"\n        inlineCollapsed={homeState.collapsed}\n      >\n\n        <Menu.Item key=\"10000\">\n          <Link to=\"/\">\n            <IconFont style={{ color: \"#fff\", fontSize: \"20px\", fontWeight: \"bold\" }} type=\"iconshouye1\" />\n            系统首页\n            </Link>\n        </Menu.Item>\n        {\n          mapMenuList(headerState.accountMenus)\n        }\n      </Menu >\n    </div >\n  );\n}\n\n\nexport default SiderBarMenus","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/logo.tsx",["197","198"],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/components/collapsed_button.tsx",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/router/index.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/service/api/v1/account_pb.js",["199"],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/index.tsx",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/index.tsx",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/login/store/actions.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/index.tsx",["200","201"],"import * as React from 'react';\nimport CollapsedButton from '@/pages/home/components/collapsed_button';\nimport styles from '@/pages/home/index.module.css';\nimport { Dispatch } from \"redux\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { RootStore } from \"@/store\";\nimport {\n  TwitterOutlined,\n  DownOutlined\n} from '@ant-design/icons';\nimport { Avatar, Dropdown, Menu } from 'antd';\nimport * as actions from './store/actions';\nimport { useHistory } from 'react-router-dom'\nimport IconFont from '@/common/icon';\n\nconst Header: React.FC = () => {\n  let history = useHistory()\n  const dispatch: Dispatch<any> = useDispatch()\n  const headerState = useSelector((state: RootStore) => state.header);\n  const signout = () => dispatch(actions.signoutRequest())\n  React.useEffect(() => {\n    dispatch(actions.getAccountRequest())\n    dispatch(actions.getAccountMenuRequest())\n  }, [dispatch, history])\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        设置\n      </Menu.Item>\n      <Menu.Item onClick={() => signout()}>\n        退出\n      </Menu.Item>\n\n    </Menu>\n  );\n  return <div className={styles.headerContainer}>\n    <div className={styles.logoContainer}>\n      {/* <TwitterOutlined className={styles.logo} /> */}\n      <IconFont className={styles.logo} type=\"icontwitter\" />\n      <strong className={styles.title}>抖书管理系统</strong>\n      {/* <CollapsedButton /> */}\n    </div>\n    <div className={styles.account}>\n      <Avatar size={24} src={process.env.PUBLIC_URL + '/logo512.png'} />&nbsp;\n      <Dropdown overlay={menu} trigger={['click']}>\n        <a href=\"##\" className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n          <strong>{headerState.account.accountNickname}</strong> <DownOutlined />\n        </a>\n      </Dropdown>\n    </div>\n\n  </div>\n}\nexport default Header","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/store/actions.ts",["202"],"import { shakebook } from '@/service/api/v1/account_pb'\nimport * as types from './types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { manager } from '@/service/api/v1/manager_pb';\nimport * as tree from '@/common/toTree';\nimport * as menuTypes from '@/pages/content/pages/menu/store/types'\n\nconst getAccountAction = (res: shakebook.IAccountInfo): types.GetAccountAction => {\n  return {\n    type: types.GET_ACCOUNT,\n    data: { ...res }\n  }\n}\n\nconst getAccountMenuAction = (data: manager.IMenuInfo[]): types.GetAccountMenuAction => {\n  return {\n    type: types.GET_ACCOUNT_MENU,\n    data: [...data]\n  }\n}\n\nexport function getAccountRequest() {\n  return (dispatch: types.GetAccountDispatch) => {\n    axios({\n      method: 'get',\n      url: api.getAccount,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: shakebook.IGetAccountResponse =\n        shakebook.GetAccountResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountAction(ret.data!))\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//查询账号菜单\nexport function getAccountMenuRequest() {\n  return (dispatch: types.GetAccountMenuDispatch) => {\n    axios({\n      method: 'get',\n      url: api.getAccountMenu,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: manager.IGetAccountMenuResponse =\n        manager.GetAccountMenuResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n      if (res.status === 200 && ret.success) {\n        const tree = toTree(ret.data as manager.IMenuInfo[])\n        dispatch(getAccountMenuAction(tree as menuTypes.MenuTree[]))\n\n\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//退出登录\nexport function signoutRequest() {\n  return (dispatch: types.GetAccountDispatch) => {\n    axios({\n      method: 'post',\n      url: api.signout,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: shakebook.IResponse =\n        shakebook.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountAction({} as shakebook.AccountInfo))\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n\nfunction toTree(data: manager.IMenuInfo[]): menuTypes.MenuTree[] { //递归树算法 将pid-id的数据库返回的json 转为树json\n  // 删除 所有 children,以防止多次调用\n  let tree: menuTypes.MenuTree[] = []\n  data.forEach(function (item) {\n    const o: menuTypes.MenuTree = {\n      title: item.menuName as string,\n      value: item.id as number,\n      key: item.id as number,\n      menuIcon: item.menuIcon as string,\n      menuName: item.menuName as string,\n      menuRouter: item.menuRouter as string,\n      parentId: item.parentId as number,\n    }\n    delete o.children\n    tree.push(o)\n  });\n  // 将数据存储为 以id为KEY的map索引数据列 \n  var map = new Map<any, menuTypes.MenuTree>();\n  tree.forEach(function (item: menuTypes.MenuTree) {\n    const id: number = item.key\n    map.set(id, item)\n  });\n\n  let val: menuTypes.MenuTree[] = [];\n  tree.forEach(function (item) {\n    // 以当前遍历项，的pid,去map对象中找到索引的id\n    var parent = map.get(item.parentId);\n    // 好绕啊，如果找到索引，那么说明此项不在顶级当中,那么需要把此项添加到，他对应的父级中\n    if (parent) {\n      (parent.children || (parent.children = [])).push(item); //这里更改的是map对象的数据(索引数据)\n      // console.log(map);\n    } else {\n      //如果没有在map中找到对应的索引ID,那么直接把 当前的item添加到 val结果集中，作为顶级\n      val.push(item);\n    }\n  });\n\n  return val\n}\n","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/store/types.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/store/reducer.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/requestAPI.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/actions.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/service/api/v1/manager_pb.js",["203","204","205"],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/types.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/reducer.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/store/actions.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/store/types.ts",["206"],"import { manager } from '@/service/api/v1/manager_pb'\nexport const GET_MENU_LIST = \"GET_MENU_LIST\"\nexport type GetMenuListAction = {\n  type: string\n  data: MenuTree[]\n}\nexport type MenuState = {\n  menuList: MenuTree[]\n}\n\nexport interface MenuTree {\n  title: string\n  value: number\n  key: number\n  parentId: number\n  menuIcon: string\n  menuName: string\n  menuRouter: string\n  children?: MenuTree[]\n}\n\nexport type GetMenuDispatch = (args: GetMenuListAction) => GetMenuListAction","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/store/reducer.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/common/icon.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/index.tsx",["207","208"],"import React, { useEffect } from 'react';\nimport { Table, Modal, Space, Button, Checkbox, message, Tag } from 'antd';\nimport { Dispatch } from \"redux\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport * as actions from './store/actions'\nimport * as roleActions from '@/pages/content/pages/role/store/actions'\nimport { RootStore } from \"@/store\";\nimport { shakebook } from '@/service/api/v1/account_pb';\nimport { manager } from '@/service/api/v1/manager_pb';\nimport { SyncOutlined, CloseCircleOutlined } from '@ant-design/icons';\n\n\n\nconst Account: React.FC = () => {\n  const dispatch: Dispatch<any> = useDispatch()\n  const accountState = useSelector((state: RootStore) => state.account);\n  const roleState = useSelector((state: RootStore) => state.role);\n  const [accountId, setAccountId] = React.useState<null | number>(null)\n  const [roleVisible, setRoleVisible] = React.useState<boolean>(false)\n\n  const columns = [\n    {\n      title: '账号',\n      dataIndex: 'accountName',\n      key: 'accountName',\n      render: (text: string) => <span style={{ color: \"dodgerblue\", fontWeight: \"bold\" }}>{text}</span>\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'accountEmail',\n      key: 'accountEmail',\n    },\n    {\n      title: '手机号',\n      dataIndex: 'accountPhone',\n      key: 'accountPhone',\n    },\n    {\n      title: '最后登录时间',\n      dataIndex: 'lastTime',\n      key: 'lastTime',\n    },\n    {\n      title: '点赞数',\n      dataIndex: 'thumbsUp',\n      key: 'thumbsUp',\n      render: (text: string) => <Tag color=\"geekblue\">{text}</Tag>\n    },\n    {\n      title: '喜欢数',\n      dataIndex: 'focusNumber',\n      key: 'focusNumber',\n      render: (text: string) => <Tag color=\"magenta\">{text}</Tag>\n    },\n    {\n      title: '粉丝数',\n      dataIndex: 'fansNumber',\n      key: 'fansNumber',\n      render: (text: string) => <Tag color=\"red\">{text}</Tag>\n    },\n    {\n      title: '状态',\n      dataIndex: 'accountStatus',\n      key: 'accountStatus',\n      render: (text: number) => <>\n        {\n          text === shakebook.AccountStatus.NORMAL ?\n            <Tag icon={<SyncOutlined spin />} color=\"success\">\n              {'正常'}\n            </Tag> :\n            text === shakebook.AccountStatus.DISABLE ?\n              <Tag icon={<CloseCircleOutlined />} color=\"error\">\n                {'已禁用'}\n              </Tag> : text === shakebook.AccountStatus.LOCK ?\n                <Tag icon={<CloseCircleOutlined />} color=\"error\">\n                  {'已锁定'}\n                </Tag> :\n                <Tag icon={<CloseCircleOutlined />} color=\"error\">\n                  {'已删除'}\n                </Tag>\n        }\n      </>\n    },\n    {\n      title: '操作',\n      key: 'action',\n      render: (text: string, record: manager.IMenuInfo) => (\n        <Space size=\"small\">\n          <Button type=\"primary\" ghost size=\"small\" onClick={() => showRoleModel(record)}>配置角色</Button>\n        </Space>\n      ),\n    },\n  ];\n\n  React.useEffect(() => {\n    dispatch(actions.getAccountListRequest())\n    dispatch(roleActions.getRoleListRequest())\n  }, [dispatch])\n\n  const showRoleModel = (record: shakebook.IAccountInfo) => {\n    dispatch(actions.getAccountBindRoleRequest({ id: record.id }))\n    setAccountId(record.id!);\n    setRoleVisible(true)\n  }\n\n  const cancelRoleModel = () => {\n    setRoleVisible(false)\n    setAccountId(null)\n  }\n\n  const submitAccountBindRole = () => {\n    const roleIds: number[] = accountState.checkboxRoles\n    dispatch(actions.AccountBindRoleRequest({ accountId, roleIds } as manager.AccountBindRoleRequest))\n    cancelRoleModel()\n  }\n  const onChangeCheckbox = (checkedValues: any[]) => {\n    dispatch(actions.onChangeCheckboxAction(checkedValues))\n  }\n\n  return (<>\n    <div style={{ marginBottom: \"20px\" }}>\n      <Modal\n        title=\"账号绑定角色\"\n        visible={roleVisible}\n        onOk={submitAccountBindRole}\n        onCancel={cancelRoleModel}\n        okText=\"确认\"\n        cancelText=\"取消\"\n      >\n        <Checkbox.Group style={{ lineHeight: 3 }}\n          options={roleState.roleCheckboxList}\n          value={[...accountState.checkboxRoles]}\n          onChange={onChangeCheckbox} />\n      </Modal>\n    </div>\n    <Table\n      columns={columns}\n      dataSource={accountState.accountList}\n      rowKey={(record) => record.id!}\n    />\n  </>\n  )\n}\nexport default Account\n","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/actions.ts",["209"],"import { shakebook } from '@/service/api/v1/account_pb'\nimport * as types from '@/pages/content/pages/account/store/types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { Dispatch } from \"redux\"\nimport { manager } from '@/service/api/v1/manager_pb';\nimport * as token from '@/common/token'\n\ndeclare global {\n  interface Window {\n    globalHistory: any\n  }\n}\n\nconst getAccountListAction = (res: shakebook.IAccountInfo[]): types.GetAccountListAction => {\n  return {\n    type: types.GET_ACCOUNT_LIST,\n    data: res\n  }\n}\n\nexport const onChangeCheckboxAction = (data: number[]): types.ChangeCheckboxAction => {\n  return {\n    type: types.CHANGE_CHECKBOX_ROLES,\n    data: data\n  }\n}\n\n\n//获取用户列表\nexport function getAccountListRequest() {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'get',\n      url: api.accountList,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: shakebook.IGetAccountListResponse =\n        shakebook.GetAccountListResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountListAction(ret.data as shakebook.IAccountInfo[]))\n\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function (err) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//\nexport function AccountBindRoleRequest(req: manager.IAccountBindRoleRequest) {\n  return () => {\n    axios({\n      method: 'post',\n      url: api.accountBindRole,\n      data: req,\n      headers: { \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\") }\n    }).then(function (res) {\n\n      let ret: shakebook.IResponse =\n        shakebook.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"操作成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function (err) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n//获取用户已绑定的角色\nexport function getAccountBindRoleRequest(req: manager.IAccountId) {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'get',\n      url: api.accountBindRole + '/' + req.id,\n      headers: { \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\") }\n    }).then(function (res) {\n\n      let ret: manager.IGetAccountBindRoleResponse =\n        manager.GetAccountBindRoleResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success && (ret.data as number[]).length > 0) {\n        let checkedKeys: number[] = (ret.data as number[])\n\n        dispatch(onChangeCheckboxAction(checkedKeys))\n      } else {\n        dispatch(onChangeCheckboxAction([]))\n      }\n    })\n      .catch(function (err) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/types.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/reducer.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/common/token.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/common/toTree.ts",[],"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/home/index.tsx",["210","211"],"import React, { useState, useEffect } from 'react';\nimport { Waterfall, DualAxes } from '@ant-design/charts';\n\nconst DemoWaterfall: React.FC = () => {\n  var data = [\n    {\n      month: '2019',\n      value: 23000000,\n    },\n    {\n      month: 'Jan',\n      value: 2200000,\n    },\n    {\n      month: 'Feb',\n      value: -4600000,\n    },\n    {\n      month: 'Mar',\n      value: -9100000,\n    },\n    {\n      month: 'Apr',\n      value: 3700000,\n    },\n    {\n      month: 'May',\n      value: -2100000,\n    },\n    {\n      month: 'Jun',\n      value: 5300000,\n    },\n    {\n      month: 'Jul',\n      value: 3100000,\n    },\n    {\n      month: 'Aug',\n      value: -1500000,\n    },\n    {\n      month: 'Sep',\n      value: 4200000,\n    },\n    {\n      month: 'Oct',\n      value: 5300000,\n    },\n    {\n      month: 'Nov',\n      value: -1500000,\n    },\n    {\n      month: 'Dec',\n      value: 5100000,\n    },\n  ];\n  var config = {\n    data: data,\n    padding: 10,\n    appendPadding: [20, 0, 0, 0],\n    xField: 'month',\n    yField: 'value',\n    meta: {\n      month: { alias: '月份' },\n      value: {\n        alias: '销售量',\n        formatter: function formatter(v: number) {\n          const s: string = (v / 10000000).toString()\n          return ''.concat(s, ' 亿');\n        },\n      },\n    },\n    total: { label: '2020' },\n    color: function color(_ref: any) {\n      var month = _ref.month,\n        value = _ref.value;\n      if (month === '2019' || month === '2020') {\n        return '#96a6a6';\n      }\n      return value > 0 ? '#f4664a' : '#30bf78';\n    },\n    // legend: {\n    //   custom: true,\n    //   items: [\n    //     {\n    //       name: 'Increase',\n    //       value: 'increase',\n    //       marker: {\n    //         symbol: 'square',\n    //         style: {\n    //           r: 5,\n    //           fill: '#f4664a',\n    //         },\n    //       },\n    //     },\n    //     {\n    //       name: 'Decrease',\n    //       value: 'decrease',\n    //       marker: {\n    //         symbol: 'square',\n    //         style: {\n    //           r: 5,\n    //           fill: '#30bf78',\n    //         },\n    //       },\n    //     },\n    //     {\n    //       name: 'Total',\n    //       value: 'total',\n    //       marker: {\n    //         symbol: 'square',\n    //         style: {\n    //           r: 5,\n    //           fill: '#96a6a6',\n    //         },\n    //       },\n    //     },\n    //   ],\n    // },\n    label: {\n      style: { fontSize: 10 },\n      layout: [{ type: 'interval-adjust-position' }],\n      background: {\n        style: {\n          fill: '#f6f6f6',\n          stroke: '#e6e6e6',\n          strokeOpacity: 0.65,\n          radius: 2,\n        },\n        padding: 1.5,\n      },\n    },\n    waterfallStyle: function waterfallStyle() {\n      return { fillOpacity: 0.85 };\n    },\n  };\n  return <>\n    <DemoDualAxes></DemoDualAxes>\n    <Waterfall {...config} />\n  </>;\n};\n\nconst DemoDualAxes: React.FC = () => {\n  var uvBillData = [\n    {\n      time: '2019-03',\n      value: 350,\n      type: 'uv',\n    },\n    {\n      time: '2019-04',\n      value: 900,\n      type: 'uv',\n    },\n    {\n      time: '2019-05',\n      value: 300,\n      type: 'uv',\n    },\n    {\n      time: '2019-06',\n      value: 450,\n      type: 'uv',\n    },\n    {\n      time: '2019-07',\n      value: 470,\n      type: 'uv',\n    },\n    {\n      time: '2019-03',\n      value: 220,\n      type: 'bill',\n    },\n    {\n      time: '2019-04',\n      value: 300,\n      type: 'bill',\n    },\n    {\n      time: '2019-05',\n      value: 250,\n      type: 'bill',\n    },\n    {\n      time: '2019-06',\n      value: 220,\n      type: 'bill',\n    },\n    {\n      time: '2019-07',\n      value: 362,\n      type: 'bill',\n    },\n  ];\n  var transformData = [\n    {\n      time: '2019-03',\n      count: 800,\n      name: 'a',\n    },\n    {\n      time: '2019-04',\n      count: 600,\n      name: 'a',\n    },\n    {\n      time: '2019-05',\n      count: 400,\n      name: 'a',\n    },\n    {\n      time: '2019-06',\n      count: 380,\n      name: 'a',\n    },\n    {\n      time: '2019-07',\n      count: 220,\n      name: 'a',\n    },\n    {\n      time: '2019-03',\n      count: 750,\n      name: 'b',\n    },\n    {\n      time: '2019-04',\n      count: 650,\n      name: 'b',\n    },\n    {\n      time: '2019-05',\n      count: 450,\n      name: 'b',\n    },\n    {\n      time: '2019-06',\n      count: 400,\n      name: 'b',\n    },\n    {\n      time: '2019-07',\n      count: 320,\n      name: 'b',\n    },\n    {\n      time: '2019-03',\n      count: 900,\n      name: 'c',\n    },\n    {\n      time: '2019-04',\n      count: 600,\n      name: 'c',\n    },\n    {\n      time: '2019-05',\n      count: 450,\n      name: 'c',\n    },\n    {\n      time: '2019-06',\n      count: 300,\n      name: 'c',\n    },\n    {\n      time: '2019-07',\n      count: 200,\n      name: 'c',\n    },\n  ];\n  var config = {\n    data: [uvBillData, transformData],\n    xField: 'time',\n    yField: ['value', 'count'],\n    geometryOptions: [\n      {\n        geometry: 'column',\n        isStack: true,\n        seriesField: 'type',\n        columnWidthRatio: 0.4,\n      },\n      {\n        geometry: 'line',\n        seriesField: 'name',\n        lineStyle: function lineStyle(_ref: any) {\n          var name = _ref.name;\n          if (name === 'a') {\n            return {\n              lineDash: [1, 4],\n              opacity: 1,\n            };\n          }\n          return { opacity: 0.5 };\n        },\n      },\n    ],\n  };\n  return <DualAxes {...config} />;\n};\n\nexport default DemoWaterfall;","/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/store/actions.ts",[],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":4,"column":3,"nodeType":"218","messageId":"219","endLine":4,"endColumn":19},{"ruleId":"216","severity":1,"message":"220","line":5,"column":3,"nodeType":"218","messageId":"219","endLine":5,"endColumn":19},{"ruleId":"216","severity":1,"message":"221","line":6,"column":3,"nodeType":"218","messageId":"219","endLine":6,"endColumn":18},{"ruleId":"216","severity":1,"message":"222","line":7,"column":3,"nodeType":"218","messageId":"219","endLine":7,"endColumn":20},{"ruleId":"216","severity":1,"message":"223","line":8,"column":3,"nodeType":"218","messageId":"219","endLine":8,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":26,"column":22,"nodeType":"226","messageId":"227","endLine":26,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":13,"column":9,"nodeType":"230","endLine":13,"endColumn":62},{"ruleId":"228","severity":1,"message":"231","line":34,"column":9,"nodeType":"230","endLine":34,"endColumn":76},{"ruleId":"232","severity":1,"message":"233","line":1222,"column":13,"nodeType":"234","messageId":"235","endLine":1239,"endColumn":14},{"ruleId":"216","severity":1,"message":"236","line":2,"column":8,"nodeType":"218","messageId":"219","endLine":2,"endColumn":23},{"ruleId":"216","severity":1,"message":"237","line":8,"column":3,"nodeType":"218","messageId":"219","endLine":8,"endColumn":18},{"ruleId":"216","severity":1,"message":"238","line":8,"column":13,"nodeType":"218","messageId":"219","endLine":8,"endColumn":17},{"ruleId":"232","severity":1,"message":"233","line":271,"column":13,"nodeType":"234","messageId":"235","endLine":280,"endColumn":14},{"ruleId":"232","severity":1,"message":"233","line":1312,"column":13,"nodeType":"234","messageId":"235","endLine":1321,"endColumn":14},{"ruleId":"232","severity":1,"message":"233","line":1811,"column":13,"nodeType":"234","messageId":"235","endLine":1820,"endColumn":14},{"ruleId":"216","severity":1,"message":"239","line":1,"column":10,"nodeType":"218","messageId":"219","endLine":1,"endColumn":17},{"ruleId":"216","severity":1,"message":"240","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":26},{"ruleId":"216","severity":1,"message":"241","line":2,"column":49,"nodeType":"218","messageId":"219","endLine":2,"endColumn":56},{"ruleId":"216","severity":1,"message":"242","line":9,"column":13,"nodeType":"218","messageId":"219","endLine":9,"endColumn":18},{"ruleId":"216","severity":1,"message":"243","line":1,"column":17,"nodeType":"218","messageId":"219","endLine":1,"endColumn":25},{"ruleId":"216","severity":1,"message":"240","line":1,"column":27,"nodeType":"218","messageId":"219","endLine":1,"endColumn":36},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"@typescript-eslint/no-unused-vars","'AppstoreOutlined' is defined but never used.","Identifier","unusedVar","'PieChartOutlined' is defined but never used.","'DesktopOutlined' is defined but never used.","'ContainerOutlined' is defined but never used.","'MailOutlined' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'CollapsedButton' is defined but never used.","'TwitterOutlined' is defined but never used.","'tree' is defined but never used.","'manager' is defined but never used.","'useEffect' is defined but never used.","'message' is defined but never used.","'token' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]