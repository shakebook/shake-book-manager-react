{"ast":null,"code":"import { registerShape, Util } from '@antv/g2';\nimport { getSectorPath } from '@antv/g2/lib/util/graphics'; // 自定义Shape 部分\n\nregisterShape('interval', 'meter-gauge', {\n  draw: function (cfg, container) {\n    // 使用 customInfo 传递参数\n    var _a = cfg.customInfo,\n        _b = _a.steps,\n        STEP = _b === void 0 ? 50 : _b,\n        _c = _a.stepRatio,\n        stepRatio = _c === void 0 ? 0.5 : _c;\n    var total = this.coordinate.endAngle - this.coordinate.startAngle;\n    var interval = total / STEP;\n    var gap = 0;\n    /**\n     * stepRatio 取值范围: (0, 1]\n     * 1: interval : gap = stepRatio : (1 - stepRatio)\n     * 2: interval * STEP + stepRatio * (STEP - 1) = total\n     */\n\n    if (stepRatio > 0 && stepRatio <= 1) {\n      interval = total / ((1 - stepRatio) / stepRatio * (STEP - 1) + STEP);\n      gap = interval * (1 - stepRatio) / stepRatio;\n    }\n\n    var group = container.addGroup(); // 绘制 gap\n\n    if (gap > 0) {\n      var center = this.coordinate.getCenter();\n      var radius = this.coordinate.getRadius();\n\n      var _d = Util.getAngle(cfg, this.coordinate),\n          startAngle = _d.startAngle,\n          endAngle = _d.endAngle;\n\n      for (var i = startAngle, j = 0; i < endAngle && j < 2 * STEP - 1; j++) {\n        var drawn = j % 2;\n\n        if (drawn) {\n          var path = getSectorPath(center.x, center.y, radius, i, Math.min(i + gap, endAngle), radius * this.coordinate.innerRadius);\n          group.addShape('path', {\n            name: 'meter-gauge-mask',\n            attrs: {\n              path: path,\n              fill: cfg.color,\n              stroke: cfg.color,\n              lineWidth: 0.5\n            },\n            // mask 不需要捕捉事件\n            capture: false\n          });\n        }\n\n        i += drawn ? gap : interval;\n      }\n    }\n\n    return group;\n  }\n});","map":{"version":3,"sources":["../../../../src/plots/gauge/shapes/meter-gauge.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,EAA+B,IAA/B,QAA2C,UAA3C;AACA,SAAS,aAAT,QAA8B,4BAA9B,C,CAEA;;AACA,aAAa,CAAC,UAAD,EAAa,aAAb,EAA4B;AACvC,EAAA,IAAI,EAAJ,UAAK,GAAL,EAA2B,SAA3B,EAAoC;AAClC;AACM,QAAA,EAAA,GAAwC,GAAG,CAAC,UAA5C;AAAA,QAAE,EAAA,GAAA,EAAA,CAAA,KAAF;AAAA,QAAS,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,EAAlB;AAAA,QAAoB,EAAA,GAAA,EAAA,CAAA,SAApB;AAAA,QAAoB,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,GAAH,GAAM,EAAnC;AAEN,QAAM,KAAK,GAAG,KAAK,UAAL,CAAgB,QAAhB,GAA2B,KAAK,UAAL,CAAgB,UAAzD;AACA,QAAI,QAAQ,GAAG,KAAK,GAAG,IAAvB;AACA,QAAI,GAAG,GAAG,CAAV;AAEA;;;;AAIG;;AACH,QAAI,SAAS,GAAG,CAAZ,IAAiB,SAAS,IAAI,CAAlC,EAAqC;AACnC,MAAA,QAAQ,GAAG,KAAK,IAAK,CAAC,IAAI,SAAL,IAAkB,SAAnB,IAAiC,IAAI,GAAG,CAAxC,IAA6C,IAAjD,CAAhB;AACA,MAAA,GAAG,GAAI,QAAQ,IAAI,IAAI,SAAR,CAAT,GAA+B,SAArC;AACD;;AAED,QAAM,KAAK,GAAG,SAAS,CAAC,QAAV,EAAd,CAlBkC,CAmBlC;;AACA,QAAI,GAAG,GAAG,CAAV,EAAa;AACX,UAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,SAAhB,EAAf;AACA,UAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,SAAhB,EAAf;;AACM,UAAA,EAAA,GAA2B,IAAI,CAAC,QAAL,CAAc,GAAd,EAAmB,KAAK,UAAxB,CAA3B;AAAA,UAAE,UAAU,GAAA,EAAA,CAAA,UAAZ;AAAA,UAAc,QAAQ,GAAA,EAAA,CAAA,QAAtB;;AACN,WAAK,IAAI,CAAC,GAAG,UAAR,EAAoB,CAAC,GAAG,CAA7B,EAAgC,CAAC,GAAG,QAAJ,IAAgB,CAAC,GAAG,IAAI,IAAJ,GAAW,CAA/D,EAAkE,CAAC,EAAnE,EAAuE;AACrE,YAAM,KAAK,GAAG,CAAC,GAAG,CAAlB;;AACA,YAAI,KAAJ,EAAW;AACT,cAAM,IAAI,GAAG,aAAa,CACxB,MAAM,CAAC,CADiB,EAExB,MAAM,CAAC,CAFiB,EAGxB,MAHwB,EAIxB,CAJwB,EAKxB,IAAI,CAAC,GAAL,CAAS,CAAC,GAAG,GAAb,EAAkB,QAAlB,CALwB,EAMxB,MAAM,GAAG,KAAK,UAAL,CAAgB,WAND,CAA1B;AAQA,UAAA,KAAK,CAAC,QAAN,CAAe,MAAf,EAAuB;AACrB,YAAA,IAAI,EAAE,kBADe;AAErB,YAAA,KAAK,EAAE;AACL,cAAA,IAAI,EAAA,IADC;AAEL,cAAA,IAAI,EAAE,GAAG,CAAC,KAFL;AAGL,cAAA,MAAM,EAAE,GAAG,CAAC,KAHP;AAIL,cAAA,SAAS,EAAE;AAJN,aAFc;AAQrB;AACA,YAAA,OAAO,EAAE;AATY,WAAvB;AAWD;;AACD,QAAA,CAAC,IAAI,KAAK,GAAG,GAAH,GAAS,QAAnB;AACD;AACF;;AAED,WAAO,KAAP;AACD;AArDsC,CAA5B,CAAb","sourcesContent":["import { registerShape, Types, Util } from '@antv/g2';\nimport { getSectorPath } from '@antv/g2/lib/util/graphics';\n\n// 自定义Shape 部分\nregisterShape('interval', 'meter-gauge', {\n  draw(cfg: Types.ShapeInfo, container) {\n    // 使用 customInfo 传递参数\n    const { steps: STEP = 50, stepRatio = 0.5 } = cfg.customInfo;\n\n    const total = this.coordinate.endAngle - this.coordinate.startAngle;\n    let interval = total / STEP;\n    let gap = 0;\n\n    /**\n     * stepRatio 取值范围: (0, 1]\n     * 1: interval : gap = stepRatio : (1 - stepRatio)\n     * 2: interval * STEP + stepRatio * (STEP - 1) = total\n     */\n    if (stepRatio > 0 && stepRatio <= 1) {\n      interval = total / (((1 - stepRatio) / stepRatio) * (STEP - 1) + STEP);\n      gap = (interval * (1 - stepRatio)) / stepRatio;\n    }\n\n    const group = container.addGroup();\n    // 绘制 gap\n    if (gap > 0) {\n      const center = this.coordinate.getCenter();\n      const radius = this.coordinate.getRadius();\n      const { startAngle, endAngle } = Util.getAngle(cfg, this.coordinate);\n      for (let i = startAngle, j = 0; i < endAngle && j < 2 * STEP - 1; j++) {\n        const drawn = j % 2;\n        if (drawn) {\n          const path = getSectorPath(\n            center.x,\n            center.y,\n            radius,\n            i,\n            Math.min(i + gap, endAngle),\n            radius * this.coordinate.innerRadius\n          );\n          group.addShape('path', {\n            name: 'meter-gauge-mask',\n            attrs: {\n              path,\n              fill: cfg.color,\n              stroke: cfg.color,\n              lineWidth: 0.5,\n            },\n            // mask 不需要捕捉事件\n            capture: false,\n          });\n        }\n        i += drawn ? gap : interval;\n      }\n    }\n\n    return group;\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}