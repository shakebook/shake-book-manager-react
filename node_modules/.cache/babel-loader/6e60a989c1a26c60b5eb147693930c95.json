{"ast":null,"code":"import { manager } from '@/service/api/v1/manager_pb';\nimport * as types from './types';\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys';\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\n\nconst getRoleListAction = res => {\n  return {\n    type: types.GET_ROLE_LIST,\n    data: res\n  };\n};\n\nexport function createRoleRequest(req) {\n  return () => {\n    axios({\n      method: 'post',\n      url: api.role,\n      data: req.data,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        notification['warning']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n        localStorage.removeItem(\"token\");\n        req.history.push('/login');\n      }\n    }).catch(function (error) {\n      notification['error']({\n        message: '信息提示',\n        description: \"请稍后重试\"\n      });\n      localStorage.removeItem(\"token\");\n      req.history.push('/login');\n    });\n  };\n} //退出登录\n\nexport function getRoleListRequest(req) {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: api.role,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.GetRoleListResponse.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListAction(ret.data));\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n        localStorage.removeItem(\"token\");\n        req.history.push('/login');\n      }\n    }).catch(function () {\n      notification['error']({\n        message: '信息提示',\n        description: \"请稍后重试\"\n      });\n      localStorage.removeItem(\"token\");\n      req.history.push('/login');\n    });\n  };\n}","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/actions.ts"],"names":["manager","types","axios","camelcaseKeys","api","notification","getRoleListAction","res","type","GET_ROLE_LIST","data","createRoleRequest","req","method","url","role","headers","localStorage","getItem","then","ret","Response","fromObject","deep","status","success","message","description","removeItem","history","push","catch","error","getRoleListRequest","dispatch","GetRoleListResponse"],"mappings":"AAAA,SAASA,OAAT,QAAwB,6BAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,YAAT,QAA6B,MAA7B;;AAEA,MAAMC,iBAAiB,GAAIC,GAAD,IAAmD;AAC3E,SAAO;AACLC,IAAAA,IAAI,EAAEP,KAAK,CAACQ,aADP;AAELC,IAAAA,IAAI,EAAEH;AAFD,GAAP;AAID,CALD;;AAOA,OAAO,SAASI,iBAAT,CAA2BC,GAA3B,EAAkE;AACvE,SAAO,MAAM;AACXV,IAAAA,KAAK,CAAC;AACJW,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAEV,GAAG,CAACW,IAFL;AAGJL,MAAAA,IAAI,EAAEE,GAAG,CAACF,IAHN;AAIJM,MAAAA,OAAO,EAAE;AACP,+BAAuB,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAD5B;AAJL,KAAD,CAAL,CAOGC,IAPH,CAOQ,UAAUZ,GAAV,EAAe;AACrB,UAAIa,GAAsB,GACxBpB,OAAO,CAACqB,QAAR,CAAiBC,UAAjB,CACEnB,aAAa,CAACI,GAAG,CAACG,IAAL,EAAqB;AAChCa,QAAAA,IAAI,EAAE;AAD0B,OAArB,CADf,CADF;;AAOA,UAAIhB,GAAG,CAACiB,MAAJ,KAAe,GAAf,IAAsBJ,GAAG,CAACK,OAA9B,EAAuC;AACrCpB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtBqB,UAAAA,OAAO,EAAE,MADa;AAEtBC,UAAAA,WAAW,EAAE;AAFS,SAAxB;AAID,OALD,MAKO;AACLtB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtBqB,UAAAA,OAAO,EAAE,MADa;AAEtBC,UAAAA,WAAW,EAAEP,GAAG,CAACM;AAFK,SAAxB;AAIAT,QAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAhB,QAAAA,GAAG,CAACiB,OAAJ,CAAYC,IAAZ,CAAiB,QAAjB;AAED;AACF,KA7BD,EA8BGC,KA9BH,CA8BS,UAAUC,KAAV,EAAiB;AACtB3B,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AACpBqB,QAAAA,OAAO,EAAE,MADW;AAEpBC,QAAAA,WAAW,EAAE;AAFO,OAAtB;AAIAV,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAhB,MAAAA,GAAG,CAACiB,OAAJ,CAAYC,IAAZ,CAAiB,QAAjB;AACD,KArCH;AAsCD,GAvCD;AAwCD,C,CAED;;AACA,OAAO,SAASG,kBAAT,CAA4BrB,GAA5B,EAAgE;AACrE,SAAQsB,QAAD,IAAqC;AAC1ChC,IAAAA,KAAK,CAAC;AACJW,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAEV,GAAG,CAACW,IAFL;AAGJC,MAAAA,OAAO,EAAE;AACP,+BAAuB,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAD5B;AAHL,KAAD,CAAL,CAMGC,IANH,CAMQ,UAAUZ,GAAV,EAAe;AACrB,UAAIa,GAAiC,GACnCpB,OAAO,CAACmC,mBAAR,CAA4Bb,UAA5B,CACEnB,aAAa,CAACI,GAAG,CAACG,IAAL,EAAqB;AAChCa,QAAAA,IAAI,EAAE;AAD0B,OAArB,CADf,CADF;;AAOA,UAAIhB,GAAG,CAACiB,MAAJ,KAAe,GAAf,IAAsBJ,GAAG,CAACK,OAA9B,EAAuC;AACrCS,QAAAA,QAAQ,CAAC5B,iBAAiB,CAACc,GAAG,CAACV,IAAL,CAAlB,CAAR;AAED,OAHD,MAGO;AACLL,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtBqB,UAAAA,OAAO,EAAE,MADa;AAEtBC,UAAAA,WAAW,EAAEP,GAAG,CAACM;AAFK,SAAxB;AAIAT,QAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAhB,QAAAA,GAAG,CAACiB,OAAJ,CAAYC,IAAZ,CAAiB,QAAjB;AACD;AACF,KAzBD,EA0BGC,KA1BH,CA0BS,YAAY;AACjB1B,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AACpBqB,QAAAA,OAAO,EAAE,MADW;AAEpBC,QAAAA,WAAW,EAAE;AAFO,OAAtB;AAIAV,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAhB,MAAAA,GAAG,CAACiB,OAAJ,CAAYC,IAAZ,CAAiB,QAAjB;AACD,KAjCH;AAkCD,GAnCD;AAoCD","sourcesContent":["import { manager } from '@/service/api/v1/manager_pb'\nimport * as types from './types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\n\nconst getRoleListAction = (res: manager.IRole[]): types.GetRoleListAction => {\n  return {\n    type: types.GET_ROLE_LIST,\n    data: res\n  }\n}\n\nexport function createRoleRequest(req: types.CreateRoleRequestWithProps) {\n  return () => {\n    axios({\n      method: 'post',\n      url: api.role,\n      data: req.data,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IResponse =\n        manager.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        notification['warning']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n        localStorage.removeItem(\"token\")\n        req.history.push('/login')\n\n      }\n    })\n      .catch(function (error) {\n        notification['error']({\n          message: '信息提示',\n          description: \"请稍后重试\"\n        });\n        localStorage.removeItem(\"token\")\n        req.history.push('/login')\n      });\n  }\n}\n\n//退出登录\nexport function getRoleListRequest(req: types.GetRoleRequestWithProps) {\n  return (dispatch: types.GetRoleDispatch) => {\n    axios({\n      method: 'get',\n      url: api.role,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IGetRoleListResponse =\n        manager.GetRoleListResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListAction(ret.data as manager.IRole[]))\n\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n        localStorage.removeItem(\"token\")\n        req.history.push('/login')\n      }\n    })\n      .catch(function () {\n        notification['error']({\n          message: '信息提示',\n          description: \"请稍后重试\"\n        });\n        localStorage.removeItem(\"token\")\n        req.history.push('/login')\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}