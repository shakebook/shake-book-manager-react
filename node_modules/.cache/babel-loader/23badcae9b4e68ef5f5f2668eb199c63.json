{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolve = void 0;\n\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\n\nvar literal_types_1 = require(\"../constants/literal_types\");\n\nvar exceptions_1 = require(\"../utils/exceptions\");\n\nvar serialization_1 = require(\"../utils/serialization\");\n\nvar instantiation_1 = require(\"./instantiation\");\n\nvar invokeFactory = function (factoryType, serviceIdentifier, fn) {\n  try {\n    return fn();\n  } catch (error) {\n    if (exceptions_1.isStackOverflowExeption(error)) {\n      throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryType, serviceIdentifier.toString()));\n    } else {\n      throw error;\n    }\n  }\n};\n\nvar _resolveRequest = function (requestScope) {\n  return function (request) {\n    request.parentContext.setCurrentRequest(request);\n    var bindings = request.bindings;\n    var childRequests = request.childRequests;\n    var targetIsAnArray = request.target && request.target.isArray();\n    var targetParentIsNotAnArray = !request.parentRequest || !request.parentRequest.target || !request.target || !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);\n\n    if (targetIsAnArray && targetParentIsNotAnArray) {\n      return childRequests.map(function (childRequest) {\n        var _f = _resolveRequest(requestScope);\n\n        return _f(childRequest);\n      });\n    } else {\n      var result = null;\n\n      if (request.target.isOptional() && bindings.length === 0) {\n        return undefined;\n      }\n\n      var binding_1 = bindings[0];\n      var isSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Singleton;\n      var isRequestSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Request;\n\n      if (isSingleton && binding_1.activated) {\n        return binding_1.cache;\n      }\n\n      if (isRequestSingleton && requestScope !== null && requestScope.has(binding_1.id)) {\n        return requestScope.get(binding_1.id);\n      }\n\n      if (binding_1.type === literal_types_1.BindingTypeEnum.ConstantValue) {\n        result = binding_1.cache;\n      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Function) {\n        result = binding_1.cache;\n      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Constructor) {\n        result = binding_1.implementationType;\n      } else if (binding_1.type === literal_types_1.BindingTypeEnum.DynamicValue && binding_1.dynamicValue !== null) {\n        result = invokeFactory(\"toDynamicValue\", binding_1.serviceIdentifier, function () {\n          return binding_1.dynamicValue(request.parentContext);\n        });\n      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Factory && binding_1.factory !== null) {\n        result = invokeFactory(\"toFactory\", binding_1.serviceIdentifier, function () {\n          return binding_1.factory(request.parentContext);\n        });\n      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Provider && binding_1.provider !== null) {\n        result = invokeFactory(\"toProvider\", binding_1.serviceIdentifier, function () {\n          return binding_1.provider(request.parentContext);\n        });\n      } else if (binding_1.type === literal_types_1.BindingTypeEnum.Instance && binding_1.implementationType !== null) {\n        result = instantiation_1.resolveInstance(binding_1.implementationType, childRequests, _resolveRequest(requestScope));\n      } else {\n        var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);\n        throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + \" \" + serviceIdentifier);\n      }\n\n      if (typeof binding_1.onActivation === \"function\") {\n        result = binding_1.onActivation(request.parentContext, result);\n      }\n\n      if (isSingleton) {\n        binding_1.cache = result;\n        binding_1.activated = true;\n      }\n\n      if (isRequestSingleton && requestScope !== null && !requestScope.has(binding_1.id)) {\n        requestScope.set(binding_1.id, result);\n      }\n\n      return result;\n    }\n  };\n};\n\nfunction resolve(context) {\n  var _f = _resolveRequest(context.plan.rootRequest.requestScope);\n\n  return _f(context.plan.rootRequest);\n}\n\nexports.resolve = resolve;","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/node_modules/inversify/lib/resolution/resolver.js"],"names":["Object","defineProperty","exports","value","resolve","ERROR_MSGS","require","literal_types_1","exceptions_1","serialization_1","instantiation_1","invokeFactory","factoryType","serviceIdentifier","fn","error","isStackOverflowExeption","Error","CIRCULAR_DEPENDENCY_IN_FACTORY","toString","_resolveRequest","requestScope","request","parentContext","setCurrentRequest","bindings","childRequests","targetIsAnArray","target","isArray","targetParentIsNotAnArray","parentRequest","matchesArray","map","childRequest","_f","result","isOptional","length","undefined","binding_1","isSingleton","scope","BindingScopeEnum","Singleton","isRequestSingleton","Request","activated","cache","has","id","get","type","BindingTypeEnum","ConstantValue","Function","Constructor","implementationType","DynamicValue","dynamicValue","Factory","factory","Provider","provider","Instance","resolveInstance","getServiceIdentifierAsString","INVALID_BINDING_TYPE","onActivation","set","context","plan","rootRequest"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolve = void 0;\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar literal_types_1 = require(\"../constants/literal_types\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar serialization_1 = require(\"../utils/serialization\");\nvar instantiation_1 = require(\"./instantiation\");\nvar invokeFactory = function (factoryType, serviceIdentifier, fn) {\n    try {\n        return fn();\n    }\n    catch (error) {\n        if (exceptions_1.isStackOverflowExeption(error)) {\n            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryType, serviceIdentifier.toString()));\n        }\n        else {\n            throw error;\n        }\n    }\n};\nvar _resolveRequest = function (requestScope) {\n    return function (request) {\n        request.parentContext.setCurrentRequest(request);\n        var bindings = request.bindings;\n        var childRequests = request.childRequests;\n        var targetIsAnArray = request.target && request.target.isArray();\n        var targetParentIsNotAnArray = !request.parentRequest ||\n            !request.parentRequest.target ||\n            !request.target ||\n            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);\n        if (targetIsAnArray && targetParentIsNotAnArray) {\n            return childRequests.map(function (childRequest) {\n                var _f = _resolveRequest(requestScope);\n                return _f(childRequest);\n            });\n        }\n        else {\n            var result = null;\n            if (request.target.isOptional() && bindings.length === 0) {\n                return undefined;\n            }\n            var binding_1 = bindings[0];\n            var isSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Singleton;\n            var isRequestSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Request;\n            if (isSingleton && binding_1.activated) {\n                return binding_1.cache;\n            }\n            if (isRequestSingleton &&\n                requestScope !== null &&\n                requestScope.has(binding_1.id)) {\n                return requestScope.get(binding_1.id);\n            }\n            if (binding_1.type === literal_types_1.BindingTypeEnum.ConstantValue) {\n                result = binding_1.cache;\n            }\n            else if (binding_1.type === literal_types_1.BindingTypeEnum.Function) {\n                result = binding_1.cache;\n            }\n            else if (binding_1.type === literal_types_1.BindingTypeEnum.Constructor) {\n                result = binding_1.implementationType;\n            }\n            else if (binding_1.type === literal_types_1.BindingTypeEnum.DynamicValue && binding_1.dynamicValue !== null) {\n                result = invokeFactory(\"toDynamicValue\", binding_1.serviceIdentifier, function () { return binding_1.dynamicValue(request.parentContext); });\n            }\n            else if (binding_1.type === literal_types_1.BindingTypeEnum.Factory && binding_1.factory !== null) {\n                result = invokeFactory(\"toFactory\", binding_1.serviceIdentifier, function () { return binding_1.factory(request.parentContext); });\n            }\n            else if (binding_1.type === literal_types_1.BindingTypeEnum.Provider && binding_1.provider !== null) {\n                result = invokeFactory(\"toProvider\", binding_1.serviceIdentifier, function () { return binding_1.provider(request.parentContext); });\n            }\n            else if (binding_1.type === literal_types_1.BindingTypeEnum.Instance && binding_1.implementationType !== null) {\n                result = instantiation_1.resolveInstance(binding_1.implementationType, childRequests, _resolveRequest(requestScope));\n            }\n            else {\n                var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);\n                throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + \" \" + serviceIdentifier);\n            }\n            if (typeof binding_1.onActivation === \"function\") {\n                result = binding_1.onActivation(request.parentContext, result);\n            }\n            if (isSingleton) {\n                binding_1.cache = result;\n                binding_1.activated = true;\n            }\n            if (isRequestSingleton &&\n                requestScope !== null &&\n                !requestScope.has(binding_1.id)) {\n                requestScope.set(binding_1.id, result);\n            }\n            return result;\n        }\n    };\n};\nfunction resolve(context) {\n    var _f = _resolveRequest(context.plan.rootRequest.requestScope);\n    return _f(context.plan.rootRequest);\n}\nexports.resolve = resolve;\n"]},"metadata":{},"sourceType":"script"}