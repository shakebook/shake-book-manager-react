{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Table, Modal, Space, Button, Checkbox } from 'antd';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from './store/actions';\nimport * as roleActions from '@/pages/content/pages/role/store/actions';\n\nconst Account = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const accountState = useSelector(state => state.account);\n  const roleState = useSelector(state => state.role);\n  const [accountId, setAccountId] = React.useState(null);\n  const [roleVisible, setRoleVisible] = React.useState(false);\n  const columns = [{\n    title: '账号',\n    dataIndex: 'accountName',\n    key: 'accountName'\n  }, {\n    title: '邮箱',\n    dataIndex: 'accountEmail',\n    key: 'accountEmail'\n  }, {\n    title: '手机号',\n    dataIndex: 'accountPhone',\n    key: 'accountPhone'\n  }, {\n    title: '最后登录时间',\n    dataIndex: 'lastTime',\n    key: 'lastTime'\n  }, {\n    title: '点赞数',\n    dataIndex: 'thumbsUp',\n    key: 'thumbsUp'\n  }, {\n    title: '喜欢数',\n    dataIndex: 'focusNumber',\n    key: 'focusNumber'\n  }, {\n    title: '粉丝数',\n    dataIndex: 'fansNumber',\n    key: 'fansNumber'\n  }, {\n    title: '粉丝数',\n    dataIndex: 'accountStatus',\n    key: 'accountStatus'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        ghost: true,\n        size: \"small\",\n        onClick: () => showRoleModel(record),\n        children: \"\\u914D\\u7F6E\\u89D2\\u8272\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }];\n  React.useEffect(() => {\n    dispatch(actions.getAccountListRequest());\n    dispatch(roleActions.getRoleListRequest());\n  }, [dispatch]);\n\n  const showRoleModel = record => {\n    alert(record.id);\n    setAccountId(record.id);\n    setRoleVisible(true);\n  };\n\n  const cancelRoleModel = () => {\n    setRoleVisible(false);\n    setAccountId(null);\n  };\n\n  const submitAccountBindRole = () => {\n    const roleIds = accountState.checkboxRoles.join(',');\n    dispatch(actions.AccountBindRoleRequest({\n      accountId,\n      roleIds\n    }));\n  };\n\n  const onChangeCheckbox = checkedValues => {\n    dispatch(actions.onChangeCheckboxAction(checkedValues));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"\\u8D26\\u53F7\\u7ED1\\u5B9A\\u89D2\\u8272\",\n        visible: roleVisible,\n        onOk: submitAccountBindRole,\n        onCancel: cancelRoleModel,\n        okText: \"\\u786E\\u8BA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n          style: {\n            lineHeight: 3\n          },\n          options: roleState.roleCheckboxList,\n          defaultValue: ['Pear'],\n          onChange: onChangeCheckbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: accountState.accountList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Account, \"pmkv3+gwppd18dPXjFWIF8ZcqkU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/index.tsx"],"names":["React","Table","Modal","Space","Button","Checkbox","useSelector","useDispatch","actions","roleActions","Account","dispatch","accountState","state","account","roleState","role","accountId","setAccountId","useState","roleVisible","setRoleVisible","columns","title","dataIndex","key","render","text","record","showRoleModel","useEffect","getAccountListRequest","getRoleListRequest","alert","id","cancelRoleModel","submitAccountBindRole","roleIds","checkboxRoles","join","AccountBindRoleRequest","onChangeCheckbox","checkedValues","onChangeCheckboxAction","marginBottom","lineHeight","roleCheckboxList","accountList"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Table, Modal, Space, Button, Checkbox, message, Tag } from 'antd';\nimport { Dispatch } from \"redux\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport * as actions from './store/actions'\nimport * as roleActions from '@/pages/content/pages/role/store/actions'\nimport { RootStore } from \"@/store\";\nimport { shakebook } from '@/service/api/v1/account_pb';\nimport { manager } from '@/service/api/v1/manager_pb';\n\n\n\nconst Account: React.FC = () => {\n  const dispatch: Dispatch<any> = useDispatch()\n  const accountState = useSelector((state: RootStore) => state.account);\n  const roleState = useSelector((state: RootStore) => state.role);\n  const [accountId, setAccountId] = React.useState<null | number>(null)\n  const [roleVisible, setRoleVisible] = React.useState<boolean>(false)\n\n  const columns = [\n    {\n      title: '账号',\n      dataIndex: 'accountName',\n      key: 'accountName',\n    },\n    {\n      title: '邮箱',\n      dataIndex: 'accountEmail',\n      key: 'accountEmail',\n    },\n    {\n      title: '手机号',\n      dataIndex: 'accountPhone',\n      key: 'accountPhone',\n    },\n    {\n      title: '最后登录时间',\n      dataIndex: 'lastTime',\n      key: 'lastTime',\n    },\n    {\n      title: '点赞数',\n      dataIndex: 'thumbsUp',\n      key: 'thumbsUp',\n    },\n    {\n      title: '喜欢数',\n      dataIndex: 'focusNumber',\n      key: 'focusNumber',\n    },\n    {\n      title: '粉丝数',\n      dataIndex: 'fansNumber',\n      key: 'fansNumber',\n    },\n    {\n      title: '粉丝数',\n      dataIndex: 'accountStatus',\n      key: 'accountStatus',\n    },\n\n\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text: string, record: manager.IMenuInfo) => (\n        <Space size=\"small\">\n          <Button type=\"primary\" ghost size=\"small\" onClick={() => showRoleModel(record)}>配置角色</Button>\n        </Space>\n      ),\n    },\n  ];\n\n  React.useEffect(() => {\n    dispatch(actions.getAccountListRequest())\n    dispatch(roleActions.getRoleListRequest())\n  }, [dispatch])\n\n  const showRoleModel = (record: shakebook.IAccountInfo) => {\n    alert(record.id!)\n    setAccountId(record.id!);\n    setRoleVisible(true)\n  }\n\n  const cancelRoleModel = () => {\n    setRoleVisible(false)\n    setAccountId(null)\n  }\n\n  const submitAccountBindRole = () => {\n\n    const roleIds: string = accountState.checkboxRoles.join(',')\n    dispatch(actions.AccountBindRoleRequest({ accountId, roleIds } as manager.AccountBindRoleRequest))\n  }\n  const onChangeCheckbox = (checkedValues: any[]) => {\n    dispatch(actions.onChangeCheckboxAction(checkedValues))\n  }\n\n  return (<>\n    <div style={{ marginBottom: \"20px\" }}>\n      <Modal\n        title=\"账号绑定角色\"\n        visible={roleVisible}\n        onOk={submitAccountBindRole}\n        onCancel={cancelRoleModel}\n        okText=\"确认\"\n        cancelText=\"取消\"\n      >\n        <Checkbox.Group style={{ lineHeight: 3 }}\n          options={roleState.roleCheckboxList}\n          defaultValue={['Pear']}\n          onChange={onChangeCheckbox} />\n      </Modal>\n    </div>\n    <Table columns={columns} dataSource={accountState.accountList} />\n  </>\n  )\n}\nexport default Account\n"]},"metadata":{},"sourceType":"module"}