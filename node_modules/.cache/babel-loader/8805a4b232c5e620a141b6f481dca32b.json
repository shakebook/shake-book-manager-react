{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport { ErrorBoundary } from '../base';\nimport './customItems';\nimport { processMinimap, getGraphSize } from './util';\nimport useGraph from '../hooks/useGraph';\nimport { deepClone } from '../util/utils';\nvar defaultStateStyles = {\n  hover: {\n    stroke: '#1890ff',\n    lineWidth: 2\n  }\n};\nvar defaultNodeSize = [120, 40];\nvar defaultNodeStyle = {\n  stroke: '#40a9ff'\n};\nvar defaultNodeAnchorPoints = [[0, 0.5], [1, 0.5]];\nvar defaultEdgeStyle = {\n  stroke: '#ccc',\n  endArrow: {\n    path: G6.Arrow.vee(10, 10),\n    fill: '#ccc'\n  }\n};\nvar defaultLayout = {\n  type: 'indented',\n  direction: 'LR',\n  dropCap: false,\n  indent: 250,\n  getHeight: function () {\n    return 60;\n  },\n  getWidth: function () {\n    return 100;\n  }\n};\nvar defaultLabelCfg = {\n  style: {\n    fill: '#000',\n    fontSize: 12\n  }\n};\nvar graphs = {};\n\nvar IndentedTree = function (_a) {\n  var data = _a.data,\n      className = _a.className,\n      style = _a.style,\n      width = _a.width,\n      height = _a.height,\n      _b = _a.nodeType,\n      nodeType = _b === void 0 ? 'card-node' : _b,\n      _c = _a.edgeType,\n      edgeType = _c === void 0 ? 'cubic-horizontal' : _c,\n      _d = _a.behaviors,\n      behaviors = _d === void 0 ? ['zoom-canvas', 'drag-canvas'] : _d,\n      _e = _a.nodeSize,\n      nodeSize = _e === void 0 ? defaultNodeSize : _e,\n      _f = _a.nodeLabelCfg,\n      nodeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n      _g = _a.nodeAnchorPoints,\n      nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g,\n      _h = _a.layout,\n      layout = _h === void 0 ? defaultLayout : _h,\n      minimapCfg = _a.minimapCfg,\n      _j = _a.nodeStyle,\n      nodeStyle = _j === void 0 ? defaultNodeStyle : _j,\n      _k = _a.edgeStyle,\n      edgeStyle = _k === void 0 ? defaultEdgeStyle : _k,\n      _l = _a.nodeStateStyles,\n      nodeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n      _m = _a.edgeStateStyles,\n      edgeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n      _o = _a.collapseExpand,\n      collapseExpand = _o === void 0 ? true : _o,\n      handleEdgeClick = _a.handleEdgeClick,\n      handleEdgeHover = _a.handleEdgeHover,\n      handleEdgeUnHover = _a.handleEdgeUnHover,\n      handleNodeClick = _a.handleNodeClick,\n      handleNodeHover = _a.handleNodeHover,\n      handleNodeUnHover = _a.handleNodeUnHover,\n      handleCanvasClick = _a.handleCanvasClick,\n      graphRef = _a.graphRef,\n      _p = _a.graphId,\n      graphId = _p === void 0 ? 'defaultIndentedTreeGraph' : _p;\n  var container = React.useRef(null);\n  var props = {\n    data: data,\n    className: className,\n    style: style,\n    width: width,\n    height: height,\n    nodeType: nodeType,\n    edgeType: edgeType,\n    behaviors: behaviors,\n    nodeSize: nodeSize,\n    nodeLabelCfg: nodeLabelCfg,\n    nodeAnchorPoints: nodeAnchorPoints,\n    layout: layout,\n    minimapCfg: minimapCfg,\n    nodeStyle: nodeStyle,\n    edgeStyle: edgeStyle,\n    nodeStateStyles: nodeStateStyles,\n    edgeStateStyles: edgeStateStyles,\n    collapseExpand: collapseExpand,\n    handleEdgeClick: handleEdgeClick,\n    handleEdgeHover: handleEdgeHover,\n    handleEdgeUnHover: handleEdgeUnHover,\n    handleNodeClick: handleNodeClick,\n    handleNodeHover: handleNodeHover,\n    handleNodeUnHover: handleNodeUnHover,\n    handleCanvasClick: handleCanvasClick,\n    graphRef: graphRef,\n    graphId: graphId\n  };\n  useGraph(graphs[graphId], props, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout\n      });\n      graphs[graphId] = graph;\n    }\n\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n\n    processMinimap(minimapCfg, graph);\n    var originData = deepClone(data);\n    graph.data(originData);\n    graph.render();\n    graph.fitView();\n\n    if (collapseExpand) {\n      var onClick_1 = function (e) {\n        var item = e.item;\n\n        if (e.target.get('name') === 'collapse-icon') {\n          graph.updateItem(item, {\n            collapsed: !item.getModel().collapsed\n          });\n          graph.layout();\n        } else if (handleNodeClick) {\n          handleNodeClick(item, graph);\n        }\n      };\n\n      graph.on('node:click', function (e) {\n        onClick_1(e);\n      });\n      graph.on('node:touchstart', function (e) {\n        onClick_1(e);\n      });\n    }\n\n    graph.on('edge:mouseenter', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', true);\n\n      if (handleEdgeHover) {\n        handleEdgeHover(item, graph);\n      }\n    });\n    graph.on('edge:mouseleave', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', false);\n\n      if (handleEdgeUnHover) {\n        handleEdgeUnHover(item, graph);\n      }\n    });\n    graph.on('edge:click', function (evt) {\n      var item = evt.item;\n\n      if (handleEdgeClick) {\n        handleEdgeClick(item, graph);\n      }\n    });\n    graph.on('edge:touchstart', function (evt) {\n      var item = evt.item;\n\n      if (handleEdgeClick) {\n        handleEdgeClick(item, graph);\n      }\n    });\n    graph.on('node:mouseenter', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', false);\n\n      if (handleNodeHover) {\n        handleNodeHover(item, graph);\n      }\n    });\n    graph.on('node:mouseleave', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', false);\n\n      if (handleNodeUnHover) {\n        handleNodeUnHover(item, graph);\n      }\n    });\n    graph.on('canvas:click', function () {\n      handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n    });\n    graph.on('canvas:touchstart', function () {\n      handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n    });\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, null, React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default IndentedTree;","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/node_modules/@ant-design/charts/es/graph/indented.js"],"names":["React","useEffect","G6","ErrorBoundary","processMinimap","getGraphSize","useGraph","deepClone","defaultStateStyles","hover","stroke","lineWidth","defaultNodeSize","defaultNodeStyle","defaultNodeAnchorPoints","defaultEdgeStyle","endArrow","path","Arrow","vee","fill","defaultLayout","type","direction","dropCap","indent","getHeight","getWidth","defaultLabelCfg","style","fontSize","graphs","IndentedTree","_a","data","className","width","height","_b","nodeType","_c","edgeType","_d","behaviors","_e","nodeSize","_f","nodeLabelCfg","_g","nodeAnchorPoints","_h","layout","minimapCfg","_j","nodeStyle","_k","edgeStyle","_l","nodeStateStyles","_m","edgeStateStyles","_o","collapseExpand","handleEdgeClick","handleEdgeHover","handleEdgeUnHover","handleNodeClick","handleNodeHover","handleNodeUnHover","handleCanvasClick","graphRef","_p","graphId","container","useRef","props","graphSize","graph","TreeGraph","current","modes","default","defaultNode","size","anchorPoints","labelCfg","defaultEdge","originData","render","fitView","onClick_1","e","item","target","get","updateItem","collapsed","getModel","on","evt","setItemState","destroy","createElement","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport { ErrorBoundary } from '../base';\nimport './customItems';\nimport { processMinimap, getGraphSize } from './util';\nimport useGraph from '../hooks/useGraph';\nimport { deepClone } from '../util/utils';\nvar defaultStateStyles = {\n    hover: {\n        stroke: '#1890ff',\n        lineWidth: 2,\n    },\n};\nvar defaultNodeSize = [120, 40];\nvar defaultNodeStyle = {\n    stroke: '#40a9ff',\n};\nvar defaultNodeAnchorPoints = [\n    [0, 0.5],\n    [1, 0.5],\n];\nvar defaultEdgeStyle = {\n    stroke: '#ccc',\n    endArrow: {\n        path: G6.Arrow.vee(10, 10),\n        fill: '#ccc',\n    },\n};\nvar defaultLayout = {\n    type: 'indented',\n    direction: 'LR',\n    dropCap: false,\n    indent: 250,\n    getHeight: function () {\n        return 60;\n    },\n    getWidth: function () {\n        return 100;\n    },\n};\nvar defaultLabelCfg = {\n    style: {\n        fill: '#000',\n        fontSize: 12,\n    },\n};\nvar graphs = {};\nvar IndentedTree = function (_a) {\n    var data = _a.data, className = _a.className, style = _a.style, width = _a.width, height = _a.height, _b = _a.nodeType, nodeType = _b === void 0 ? 'card-node' : _b, _c = _a.edgeType, edgeType = _c === void 0 ? 'cubic-horizontal' : _c, _d = _a.behaviors, behaviors = _d === void 0 ? ['zoom-canvas', 'drag-canvas'] : _d, _e = _a.nodeSize, nodeSize = _e === void 0 ? defaultNodeSize : _e, _f = _a.nodeLabelCfg, nodeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = _a.nodeAnchorPoints, nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g, _h = _a.layout, layout = _h === void 0 ? defaultLayout : _h, minimapCfg = _a.minimapCfg, _j = _a.nodeStyle, nodeStyle = _j === void 0 ? defaultNodeStyle : _j, _k = _a.edgeStyle, edgeStyle = _k === void 0 ? defaultEdgeStyle : _k, _l = _a.nodeStateStyles, nodeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = _a.edgeStateStyles, edgeStateStyles = _m === void 0 ? defaultStateStyles : _m, _o = _a.collapseExpand, collapseExpand = _o === void 0 ? true : _o, handleEdgeClick = _a.handleEdgeClick, handleEdgeHover = _a.handleEdgeHover, handleEdgeUnHover = _a.handleEdgeUnHover, handleNodeClick = _a.handleNodeClick, handleNodeHover = _a.handleNodeHover, handleNodeUnHover = _a.handleNodeUnHover, handleCanvasClick = _a.handleCanvasClick, graphRef = _a.graphRef, _p = _a.graphId, graphId = _p === void 0 ? 'defaultIndentedTreeGraph' : _p;\n    var container = React.useRef(null);\n    var props = {\n        data: data,\n        className: className,\n        style: style,\n        width: width,\n        height: height,\n        nodeType: nodeType,\n        edgeType: edgeType,\n        behaviors: behaviors,\n        nodeSize: nodeSize,\n        nodeLabelCfg: nodeLabelCfg,\n        nodeAnchorPoints: nodeAnchorPoints,\n        layout: layout,\n        minimapCfg: minimapCfg,\n        nodeStyle: nodeStyle,\n        edgeStyle: edgeStyle,\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        collapseExpand: collapseExpand,\n        handleEdgeClick: handleEdgeClick,\n        handleEdgeHover: handleEdgeHover,\n        handleEdgeUnHover: handleEdgeUnHover,\n        handleNodeClick: handleNodeClick,\n        handleNodeHover: handleNodeHover,\n        handleNodeUnHover: handleNodeUnHover,\n        handleCanvasClick: handleCanvasClick,\n        graphRef: graphRef,\n        graphId: graphId,\n    };\n    useGraph(graphs[graphId], props, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                modes: {\n                    default: behaviors,\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    anchorPoints: nodeAnchorPoints,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        processMinimap(minimapCfg, graph);\n        var originData = deepClone(data);\n        graph.data(originData);\n        graph.render();\n        graph.fitView();\n        if (collapseExpand) {\n            var onClick_1 = function (e) {\n                var item = e.item;\n                if (e.target.get('name') === 'collapse-icon') {\n                    graph.updateItem(item, {\n                        collapsed: !item.getModel().collapsed,\n                    });\n                    graph.layout();\n                }\n                else if (handleNodeClick) {\n                    handleNodeClick(item, graph);\n                }\n            };\n            graph.on('node:click', function (e) {\n                onClick_1(e);\n            });\n            graph.on('node:touchstart', function (e) {\n                onClick_1(e);\n            });\n        }\n        graph.on('edge:mouseenter', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', true);\n            if (handleEdgeHover) {\n                handleEdgeHover(item, graph);\n            }\n        });\n        graph.on('edge:mouseleave', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', false);\n            if (handleEdgeUnHover) {\n                handleEdgeUnHover(item, graph);\n            }\n        });\n        graph.on('edge:click', function (evt) {\n            var item = evt.item;\n            if (handleEdgeClick) {\n                handleEdgeClick(item, graph);\n            }\n        });\n        graph.on('edge:touchstart', function (evt) {\n            var item = evt.item;\n            if (handleEdgeClick) {\n                handleEdgeClick(item, graph);\n            }\n        });\n        graph.on('node:mouseenter', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', false);\n            if (handleNodeHover) {\n                handleNodeHover(item, graph);\n            }\n        });\n        graph.on('node:mouseleave', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', false);\n            if (handleNodeUnHover) {\n                handleNodeUnHover(item, graph);\n            }\n        });\n        graph.on('canvas:click', function () {\n            handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n        });\n        graph.on('canvas:touchstart', function () {\n            handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n        });\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, null,\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default IndentedTree;\n"]},"metadata":{},"sourceType":"module"}