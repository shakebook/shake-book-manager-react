{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport { ErrorBoundary } from '../base';\nimport { customIconNode } from './customItems';\nimport { getGraphSize, processMinimap } from './util';\nimport useGraph from '../hooks/useGraph';\nimport { deepClone } from '../util/utils';\nvar defaultStateStyles = {\n  hover: {\n    stroke: '#1890ff',\n    lineWidth: 2\n  }\n};\nvar defaultNodeStyle = {\n  fill: '#91d5ff',\n  stroke: '#40a9ff',\n  radius: 5\n};\nvar defaultEdgeStyle = {\n  stroke: '#91d5ff',\n  endArrow: {\n    path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n    fill: '#91d5ff',\n    d: -20\n  }\n};\nvar defaultLayout = {\n  type: 'compactBox',\n  direction: 'TB',\n  getId: function getId(d) {\n    return d.id;\n  },\n  getHeight: function getHeight() {\n    return 16;\n  },\n  getWidth: function getWidth() {\n    return 16;\n  },\n  getVGap: function getVGap() {\n    return 40;\n  },\n  getHGap: function getHGap() {\n    return 70;\n  }\n};\nvar defaultLabelCfg = {\n  style: {\n    fill: '#000',\n    fontSize: 12\n  }\n};\nvar graphs = {};\n\nvar OrganizationTreeGraphComponent = function (_a) {\n  var data = _a.data,\n      className = _a.className,\n      style = _a.style,\n      width = _a.width,\n      height = _a.height,\n      _b = _a.nodeType,\n      nodeType = _b === void 0 ? 'rect' : _b,\n      _c = _a.edgeType,\n      edgeType = _c === void 0 ? 'flow-line' : _c,\n      _d = _a.collapseExpand,\n      collapseExpand = _d === void 0 ? false : _d,\n      _e = _a.nodeSize,\n      nodeSize = _e === void 0 ? [120, 40] : _e,\n      _f = _a.nodeLabelCfg,\n      nodeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n      _g = _a.edgeLabelCfg,\n      edgeLabelCfg = _g === void 0 ? defaultLabelCfg : _g,\n      _h = _a.layout,\n      layout = _h === void 0 ? defaultLayout : _h,\n      _j = _a.enableEdit,\n      enableEdit = _j === void 0 ? false : _j,\n      minimapCfg = _a.minimapCfg,\n      _k = _a.nodeStyle,\n      nodeStyle = _k === void 0 ? defaultNodeStyle : _k,\n      _l = _a.edgeStyle,\n      edgeStyle = _l === void 0 ? defaultEdgeStyle : _l,\n      _m = _a.nodeStateStyles,\n      nodeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n      _o = _a.edgeStateStyles,\n      edgeStateStyles = _o === void 0 ? defaultStateStyles : _o,\n      handleNodeClick = _a.handleNodeClick,\n      handleEdgeClick = _a.handleEdgeClick,\n      handleNodeHover = _a.handleNodeHover,\n      handleNodeUnHover = _a.handleNodeUnHover,\n      handleEdgeHover = _a.handleEdgeHover,\n      handleEdgeUnHover = _a.handleEdgeUnHover,\n      handleCanvasClick = _a.handleCanvasClick,\n      graphRef = _a.graphRef,\n      _p = _a.graphId,\n      graphId = _p === void 0 ? 'defaultOrganizationTreeGraph' : _p;\n  var props = {\n    data: data,\n    className: className,\n    style: style,\n    width: width,\n    height: height,\n    nodeType: nodeType,\n    edgeType: edgeType,\n    collapseExpand: collapseExpand,\n    nodeSize: nodeSize,\n    nodeLabelCfg: nodeLabelCfg,\n    edgeLabelCfg: edgeLabelCfg,\n    layout: layout,\n    enableEdit: enableEdit,\n    minimapCfg: minimapCfg,\n    nodeStyle: nodeStyle,\n    edgeStyle: edgeStyle,\n    nodeStateStyles: nodeStateStyles,\n    edgeStateStyles: edgeStateStyles,\n    handleNodeClick: handleNodeClick,\n    handleEdgeClick: handleEdgeClick,\n    handleNodeHover: handleNodeHover,\n    handleNodeUnHover: handleNodeUnHover,\n    handleEdgeHover: handleEdgeHover,\n    handleEdgeUnHover: handleEdgeUnHover,\n    handleCanvasClick: handleCanvasClick,\n    graphRef: graphRef,\n    graphId: graphId\n  };\n  var container = React.useRef(null);\n  useGraph(graphs[graphId], props, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n\n    if (nodeType === 'icon-node') {\n      customIconNode({\n        enableEdit: enableEdit\n      });\n    }\n\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.TreeGraph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        linkCenter: true,\n        modes: {\n          default: ['drag-canvas', 'zoom-canvas']\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout\n      });\n      graphs[graphId] = graph;\n    }\n\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n\n    processMinimap(minimapCfg, graph);\n    var originData = deepClone(data);\n    graph.data(originData);\n    graph.render();\n    graph.fitView();\n\n    if (collapseExpand) {\n      graph.addBehaviors({\n        type: 'collapse-expand'\n      }, 'default');\n    }\n\n    graph.on('node:mouseenter', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', true);\n\n      if (handleNodeHover) {\n        handleNodeHover(item, graph);\n      }\n    });\n    graph.on('node:mouseleave', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', false);\n\n      if (handleNodeUnHover) {\n        handleNodeUnHover(item, graph);\n      }\n    });\n    graph.on('node:click', function (evt) {\n      var item = evt.item,\n          target = evt.target;\n      var targetType = target.get('type');\n      var name = target.get('name'); // 增加元素\n\n      if (targetType === 'marker') {\n        var model = item.getModel();\n\n        if (name === 'add-item') {\n          if (!model.children) {\n            model.children = [];\n          }\n\n          var tmpId = Math.random().toString(36).slice(-8);\n          model.children.push({\n            id: tmpId,\n            label: tmpId\n          });\n          graph.updateChild(model, model.id);\n        } else if (name === 'remove-item') {\n          graph.removeChild(model.id);\n        }\n      }\n\n      if (handleNodeClick) {\n        handleNodeClick(item, graph);\n      }\n    });\n    graph.on('edge:mouseenter', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', true);\n\n      if (handleEdgeHover) {\n        handleEdgeHover(item, graph);\n      }\n    });\n    graph.on('edge:mouseleave', function (evt) {\n      var item = evt.item;\n      graph.setItemState(item, 'hover', false);\n\n      if (handleEdgeUnHover) {\n        handleEdgeUnHover(item, graph);\n      }\n    });\n    graph.on('edge:click', function (evt) {\n      var item = evt.item;\n\n      if (handleEdgeClick) {\n        handleEdgeClick(item, graph);\n      }\n    });\n    graph.on('canvas:click', function () {\n      handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n    });\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, null, React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default OrganizationTreeGraphComponent;","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/node_modules/@ant-design/charts/es/graph/organizationTreeGraph.js"],"names":["React","useEffect","G6","ErrorBoundary","customIconNode","getGraphSize","processMinimap","useGraph","deepClone","defaultStateStyles","hover","stroke","lineWidth","defaultNodeStyle","fill","radius","defaultEdgeStyle","endArrow","path","d","defaultLayout","type","direction","getId","id","getHeight","getWidth","getVGap","getHGap","defaultLabelCfg","style","fontSize","graphs","OrganizationTreeGraphComponent","_a","data","className","width","height","_b","nodeType","_c","edgeType","_d","collapseExpand","_e","nodeSize","_f","nodeLabelCfg","_g","edgeLabelCfg","_h","layout","_j","enableEdit","minimapCfg","_k","nodeStyle","_l","edgeStyle","_m","nodeStateStyles","_o","edgeStateStyles","handleNodeClick","handleEdgeClick","handleNodeHover","handleNodeUnHover","handleEdgeHover","handleEdgeUnHover","handleCanvasClick","graphRef","_p","graphId","props","container","useRef","graphSize","graph","TreeGraph","current","linkCenter","modes","default","defaultNode","size","labelCfg","defaultEdge","originData","render","fitView","addBehaviors","on","evt","item","setItemState","target","targetType","get","name","model","getModel","children","tmpId","Math","random","toString","slice","push","label","updateChild","removeChild","destroy","createElement","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport { ErrorBoundary } from '../base';\nimport { customIconNode } from './customItems';\nimport { getGraphSize, processMinimap } from './util';\nimport useGraph from '../hooks/useGraph';\nimport { deepClone } from '../util/utils';\nvar defaultStateStyles = {\n    hover: {\n        stroke: '#1890ff',\n        lineWidth: 2,\n    },\n};\nvar defaultNodeStyle = {\n    fill: '#91d5ff',\n    stroke: '#40a9ff',\n    radius: 5,\n};\nvar defaultEdgeStyle = {\n    stroke: '#91d5ff',\n    endArrow: {\n        path: 'M 0,0 L 12, 6 L 9,0 L 12, -6 Z',\n        fill: '#91d5ff',\n        d: -20,\n    },\n};\nvar defaultLayout = {\n    type: 'compactBox',\n    direction: 'TB',\n    getId: function getId(d) {\n        return d.id;\n    },\n    getHeight: function getHeight() {\n        return 16;\n    },\n    getWidth: function getWidth() {\n        return 16;\n    },\n    getVGap: function getVGap() {\n        return 40;\n    },\n    getHGap: function getHGap() {\n        return 70;\n    },\n};\nvar defaultLabelCfg = {\n    style: {\n        fill: '#000',\n        fontSize: 12,\n    },\n};\nvar graphs = {};\nvar OrganizationTreeGraphComponent = function (_a) {\n    var data = _a.data, className = _a.className, style = _a.style, width = _a.width, height = _a.height, _b = _a.nodeType, nodeType = _b === void 0 ? 'rect' : _b, _c = _a.edgeType, edgeType = _c === void 0 ? 'flow-line' : _c, _d = _a.collapseExpand, collapseExpand = _d === void 0 ? false : _d, _e = _a.nodeSize, nodeSize = _e === void 0 ? [120, 40] : _e, _f = _a.nodeLabelCfg, nodeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = _a.edgeLabelCfg, edgeLabelCfg = _g === void 0 ? defaultLabelCfg : _g, _h = _a.layout, layout = _h === void 0 ? defaultLayout : _h, _j = _a.enableEdit, enableEdit = _j === void 0 ? false : _j, minimapCfg = _a.minimapCfg, _k = _a.nodeStyle, nodeStyle = _k === void 0 ? defaultNodeStyle : _k, _l = _a.edgeStyle, edgeStyle = _l === void 0 ? defaultEdgeStyle : _l, _m = _a.nodeStateStyles, nodeStateStyles = _m === void 0 ? defaultStateStyles : _m, _o = _a.edgeStateStyles, edgeStateStyles = _o === void 0 ? defaultStateStyles : _o, handleNodeClick = _a.handleNodeClick, handleEdgeClick = _a.handleEdgeClick, handleNodeHover = _a.handleNodeHover, handleNodeUnHover = _a.handleNodeUnHover, handleEdgeHover = _a.handleEdgeHover, handleEdgeUnHover = _a.handleEdgeUnHover, handleCanvasClick = _a.handleCanvasClick, graphRef = _a.graphRef, _p = _a.graphId, graphId = _p === void 0 ? 'defaultOrganizationTreeGraph' : _p;\n    var props = {\n        data: data,\n        className: className,\n        style: style,\n        width: width,\n        height: height,\n        nodeType: nodeType,\n        edgeType: edgeType,\n        collapseExpand: collapseExpand,\n        nodeSize: nodeSize,\n        nodeLabelCfg: nodeLabelCfg,\n        edgeLabelCfg: edgeLabelCfg,\n        layout: layout,\n        enableEdit: enableEdit,\n        minimapCfg: minimapCfg,\n        nodeStyle: nodeStyle,\n        edgeStyle: edgeStyle,\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        handleNodeClick: handleNodeClick,\n        handleEdgeClick: handleEdgeClick,\n        handleNodeHover: handleNodeHover,\n        handleNodeUnHover: handleNodeUnHover,\n        handleEdgeHover: handleEdgeHover,\n        handleEdgeUnHover: handleEdgeUnHover,\n        handleCanvasClick: handleCanvasClick,\n        graphRef: graphRef,\n        graphId: graphId,\n    };\n    var container = React.useRef(null);\n    useGraph(graphs[graphId], props, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        if (nodeType === 'icon-node') {\n            customIconNode({ enableEdit: enableEdit });\n        }\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                linkCenter: true,\n                modes: {\n                    default: ['drag-canvas', 'zoom-canvas'],\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                    labelCfg: edgeLabelCfg,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        processMinimap(minimapCfg, graph);\n        var originData = deepClone(data);\n        graph.data(originData);\n        graph.render();\n        graph.fitView();\n        if (collapseExpand) {\n            graph.addBehaviors({\n                type: 'collapse-expand',\n            }, 'default');\n        }\n        graph.on('node:mouseenter', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', true);\n            if (handleNodeHover) {\n                handleNodeHover(item, graph);\n            }\n        });\n        graph.on('node:mouseleave', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', false);\n            if (handleNodeUnHover) {\n                handleNodeUnHover(item, graph);\n            }\n        });\n        graph.on('node:click', function (evt) {\n            var item = evt.item, target = evt.target;\n            var targetType = target.get('type');\n            var name = target.get('name');\n            // 增加元素\n            if (targetType === 'marker') {\n                var model = item.getModel();\n                if (name === 'add-item') {\n                    if (!model.children) {\n                        model.children = [];\n                    }\n                    var tmpId = Math.random().toString(36).slice(-8);\n                    model.children.push({\n                        id: tmpId,\n                        label: tmpId,\n                    });\n                    graph.updateChild(model, model.id);\n                }\n                else if (name === 'remove-item') {\n                    graph.removeChild(model.id);\n                }\n            }\n            if (handleNodeClick) {\n                handleNodeClick(item, graph);\n            }\n        });\n        graph.on('edge:mouseenter', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', true);\n            if (handleEdgeHover) {\n                handleEdgeHover(item, graph);\n            }\n        });\n        graph.on('edge:mouseleave', function (evt) {\n            var item = evt.item;\n            graph.setItemState(item, 'hover', false);\n            if (handleEdgeUnHover) {\n                handleEdgeUnHover(item, graph);\n            }\n        });\n        graph.on('edge:click', function (evt) {\n            var item = evt.item;\n            if (handleEdgeClick) {\n                handleEdgeClick(item, graph);\n            }\n        });\n        graph.on('canvas:click', function () {\n            handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n        });\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, null,\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default OrganizationTreeGraphComponent;\n"]},"metadata":{},"sourceType":"module"}