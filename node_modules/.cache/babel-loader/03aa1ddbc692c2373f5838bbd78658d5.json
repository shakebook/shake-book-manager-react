{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { binHistogram } from '../../utils/transform/histogram';\nimport { adaptor } from './adaptor';\n\nvar Histogram =\n/** @class */\nfunction (_super) {\n  __extends(Histogram, _super);\n\n  function Histogram() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'histogram';\n    return _this;\n  }\n\n  Histogram.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    var _a = this.options,\n        binField = _a.binField,\n        binNumber = _a.binNumber,\n        binWidth = _a.binWidth,\n        stackField = _a.stackField;\n    this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));\n  };\n\n  Histogram.prototype.getDefaultOptions = function () {\n    return deepAssign({}, _super.prototype.getDefaultOptions.call(this), {\n      // @ts-ignore\n      columnStyle: {\n        stroke: '#FFFFFF'\n      },\n      tooltip: {\n        shared: true,\n        showMarkers: false\n      },\n      interactions: [{\n        type: 'active-region'\n      }]\n    });\n  };\n  /**\n   * 获取直方图的适配器\n   */\n\n\n  Histogram.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Histogram;\n}(Plot);\n\nexport { Histogram };","map":{"version":3,"sources":["../../../src/plots/histogram/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AACA,SAAS,UAAT,QAA2B,aAA3B;AAEA,SAAS,YAAT,QAA6B,iCAA7B;AAEA,SAAS,OAAT,QAAwB,WAAxB;;AAIA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA/B,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,WAAf;;AA6BR;;AA3BQ,EAAA,SAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,IAAlB,EAAgD;AAC9C,SAAK,YAAL,CAAkB;AAAE,MAAA,IAAI,EAAA;AAAN,KAAlB;AAEM,QAAA,EAAA,GAAgD,KAAK,OAArD;AAAA,QAAE,QAAQ,GAAA,EAAA,CAAA,QAAV;AAAA,QAAY,SAAS,GAAA,EAAA,CAAA,SAArB;AAAA,QAAuB,QAAQ,GAAA,EAAA,CAAA,QAA/B;AAAA,QAAiC,UAAU,GAAA,EAAA,CAAA,UAA3C;AACN,SAAK,KAAL,CAAW,UAAX,CAAsB,YAAY,CAAC,IAAD,EAAO,QAAP,EAAiB,QAAjB,EAA2B,SAA3B,EAAsC,UAAtC,CAAlC;AACD,GALM;;AAOG,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO,UAAU,CAAC,EAAD,EAAK,MAAA,CAAA,SAAA,CAAM,iBAAN,CAAuB,IAAvB,CAAuB,IAAvB,CAAL,EAAgC;AAC/C;AACA,MAAA,WAAW,EAAE;AACX,QAAA,MAAM,EAAE;AADG,OAFkC;AAK/C,MAAA,OAAO,EAAE;AACP,QAAA,MAAM,EAAE,IADD;AAEP,QAAA,WAAW,EAAE;AAFN,OALsC;AAS/C,MAAA,YAAY,EAAE,CAAC;AAAE,QAAA,IAAI,EAAE;AAAR,OAAD;AATiC,KAAhC,CAAjB;AAWD,GAZS;AAcV;;AAEG;;;AACO,EAAA,SAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,SAAA;AAAC,CA/BD,CAA+B,IAA/B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { deepAssign } from '../../utils';\nimport { Adaptor } from '../../core/adaptor';\nimport { binHistogram } from '../../utils/transform/histogram';\nimport { HistogramOptions } from './types';\nimport { adaptor } from './adaptor';\n\nexport { HistogramOptions };\n\nexport class Histogram extends Plot<HistogramOptions> {\n  /** 图表类型 */\n  public type: string = 'histogram';\n\n  public changeData(data: HistogramOptions['data']) {\n    this.updateOption({ data });\n\n    const { binField, binNumber, binWidth, stackField } = this.options;\n    this.chart.changeData(binHistogram(data, binField, binWidth, binNumber, stackField));\n  }\n\n  protected getDefaultOptions() {\n    return deepAssign({}, super.getDefaultOptions(), {\n      // @ts-ignore\n      columnStyle: {\n        stroke: '#FFFFFF',\n      },\n      tooltip: {\n        shared: true,\n        showMarkers: false,\n      },\n      interactions: [{ type: 'active-region' }],\n    });\n  }\n\n  /**\n   * 获取直方图的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<HistogramOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}