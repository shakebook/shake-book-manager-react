{"ast":null,"code":"import { shakebook } from '@/service/api/v1/account_pb';\nimport * as types from '@/pages/content/pages/account/store/types';\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys';\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { manager } from '@/service/api/v1/manager_pb';\nimport * as token from '@/common/token';\n\nconst getAccountListAction = res => {\n  return {\n    type: types.GET_ACCOUNT_LIST,\n    data: res\n  };\n};\n\nexport const onChangeCheckboxAction = data => {\n  return {\n    type: types.CHANGE_CHECKBOX_ROLES,\n    data: data\n  };\n}; //获取用户列表\n\nexport function getAccountListRequest() {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: api.accountList,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = shakebook.GetAccountListResponse.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountListAction(ret.data));\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function (err) {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //用户绑定角色\n\nexport function AccountBindRoleRequest(req) {\n  return () => {\n    axios({\n      method: 'post',\n      url: api.accountBindRole,\n      data: req,\n      headers: { ...token.Header\n      }\n    }).then(function (res) {\n      let ret = shakebook.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"操作成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function (err) {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //获取用户已绑定的角色\n\n_c = AccountBindRoleRequest;\nexport function getAccountBindRoleRequest(req) {\n  return () => {\n    axios({\n      method: 'get',\n      url: api.accountBindRole,\n      headers: { ...token.Header\n      }\n    }).then(function (res) {\n      let ret = manager.GetAccountBindRoleResponse.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"操作成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function (err) {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountBindRoleRequest\");","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/actions.ts"],"names":["shakebook","types","axios","camelcaseKeys","api","notification","manager","token","getAccountListAction","res","type","GET_ACCOUNT_LIST","data","onChangeCheckboxAction","CHANGE_CHECKBOX_ROLES","getAccountListRequest","dispatch","method","url","accountList","headers","localStorage","getItem","then","ret","GetAccountListResponse","fromObject","deep","status","success","message","description","catch","err","removeItem","window","globalHistory","push","AccountBindRoleRequest","req","accountBindRole","Header","Response","getAccountBindRoleRequest","GetAccountBindRoleResponse"],"mappings":"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","sourcesContent":["import { shakebook } from '@/service/api/v1/account_pb'\nimport * as types from '@/pages/content/pages/account/store/types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { Dispatch } from \"redux\"\nimport { manager } from '@/service/api/v1/manager_pb';\nimport * as token from '@/common/token'\n\ndeclare global {\n  interface Window {\n    globalHistory: any\n  }\n}\n\nconst getAccountListAction = (res: shakebook.IAccountInfo[]): types.GetAccountListAction => {\n  return {\n    type: types.GET_ACCOUNT_LIST,\n    data: res\n  }\n}\n\nexport const onChangeCheckboxAction = (data: number[]): types.ChangeCheckboxAction => {\n  return {\n    type: types.CHANGE_CHECKBOX_ROLES,\n    data: data\n  }\n}\n\n\n//获取用户列表\nexport function getAccountListRequest() {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'get',\n      url: api.accountList,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: shakebook.IGetAccountListResponse =\n        shakebook.GetAccountListResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountListAction(ret.data as shakebook.IAccountInfo[]))\n\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function (err) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//用户绑定角色\nexport function AccountBindRoleRequest(req: manager.IAccountBindRoleRequest) {\n  return () => {\n    axios({\n      method: 'post',\n      url: api.accountBindRole,\n      data: req,\n      headers: { ...token.Header }\n    }).then(function (res) {\n\n      let ret: shakebook.IResponse =\n        shakebook.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"操作成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function (err) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n//获取用户已绑定的角色\nexport function getAccountBindRoleRequest(req: manager.IAccountId) {\n  return () => {\n    axios({\n      method: 'get',\n      url: api.accountBindRole,\n      headers: { ...token.Header }\n    }).then(function (res) {\n\n      let ret: manager.IGetAccountBindRoleResponse =\n        manager.GetAccountBindRoleResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"操作成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function (err) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}