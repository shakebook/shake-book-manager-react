{"ast":null,"code":"import { each, every, filter, isString } from '@antv/util';\nimport { LEVEL, log } from '../../utils';\n/**\n * 获取总计值\n * @param data\n * @param field\n */\n\nexport function getTotalValue(data, field) {\n  var total = null;\n  each(data, function (item) {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n/**\n * pie label offset adaptor\n */\n\nexport function adaptOffset(type, offset) {\n  var defaultOffset;\n\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n\n      return offset < 0 ? offset : defaultOffset;\n\n    case 'outer':\n      defaultOffset = 12;\n\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n\n      return offset > 0 ? offset : defaultOffset;\n\n    default:\n      return offset;\n  }\n}\n/**\n * 处理不合法的数据(过滤 非数值型 和 NaN，保留 null)\n * @param data\n * @param angleField\n */\n\nexport function processIllegalData(data, angleField) {\n  var processData = filter(data, function (d) {\n    var v = d[angleField];\n    return typeof v === 'number' && !isNaN(v) || v === null;\n  }); // 打印异常数据情况\n\n  log(LEVEL.WARN, processData.length === data.length, 'illegal data existed in chart data.');\n  return processData;\n}\n/**\n * 判断数据是否全部为 0\n * @param data\n * @param angleField\n */\n\nexport function isAllZero(data, angleField) {\n  return every(data, function (d) {\n    return d[angleField] === 0;\n  });\n}","map":{"version":3,"sources":["../../../src/plots/pie/utils.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,KAAf,EAAsB,MAAtB,EAA8B,QAA9B,QAA8C,YAA9C;AACA,SAAS,KAAT,EAAgB,GAAhB,QAA2B,aAA3B;AAIA;;;;AAIG;;AACH,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAAoC,KAApC,EAAiD;AACrD,MAAI,KAAK,GAAG,IAAZ;AACA,EAAA,IAAI,CAAC,IAAD,EAAO,UAAC,IAAD,EAAK;AACd,QAAI,OAAO,IAAI,CAAC,KAAD,CAAX,KAAuB,QAA3B,EAAqC;AACnC,MAAA,KAAK,IAAI,IAAI,CAAC,KAAD,CAAb;AACD;AACF,GAJG,CAAJ;AAKA,SAAO,KAAP;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,WAAV,CAAsB,IAAtB,EAAoC,MAApC,EAA4D;AAChE,MAAI,aAAJ;;AACA,UAAQ,IAAR;AACE,SAAK,OAAL;AACE,MAAA,aAAa,GAAG,MAAhB;;AACA,UAAI,QAAQ,CAAC,MAAD,CAAR,IAAoB,MAAM,CAAC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C;AAC5C,eAAO,UAAU,CAAC,MAAD,CAAV,GAAqB,IAArB,GAA4B,CAA5B,GAAgC,aAAhC,GAAgD,MAAvD;AACD;;AACD,aAAO,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,aAA7B;;AACF,SAAK,OAAL;AACE,MAAA,aAAa,GAAG,EAAhB;;AACA,UAAI,QAAQ,CAAC,MAAD,CAAR,IAAoB,MAAM,CAAC,QAAP,CAAgB,GAAhB,CAAxB,EAA8C;AAC5C,eAAO,UAAU,CAAC,MAAD,CAAV,GAAqB,IAArB,GAA4B,CAA5B,GAAgC,aAAhC,GAAgD,MAAvD;AACD;;AACD,aAAO,MAAM,GAAG,CAAT,GAAa,MAAb,GAAsB,aAA7B;;AACF;AACE,aAAO,MAAP;AAdJ;AAgBD;AAED;;;;AAIG;;AACH,OAAM,SAAU,kBAAV,CAA6B,IAA7B,EAAuD,UAAvD,EAAyE;AAC7E,MAAM,WAAW,GAAG,MAAM,CAAC,IAAD,EAAO,UAAC,CAAD,EAAE;AACjC,QAAM,CAAC,GAAG,CAAC,CAAC,UAAD,CAAX;AACA,WAAQ,OAAO,CAAP,KAAa,QAAb,IAAyB,CAAC,KAAK,CAAC,CAAD,CAAhC,IAAwC,CAAC,KAAK,IAArD;AACD,GAHyB,CAA1B,CAD6E,CAM7E;;AACA,EAAA,GAAG,CAAC,KAAK,CAAC,IAAP,EAAa,WAAW,CAAC,MAAZ,KAAuB,IAAI,CAAC,MAAzC,EAAiD,qCAAjD,CAAH;AAEA,SAAO,WAAP;AACD;AAED;;;;AAIG;;AACH,OAAM,SAAU,SAAV,CAAoB,IAApB,EAA8C,UAA9C,EAAgE;AACpE,SAAO,KAAK,CAAC,IAAD,EAAO,UAAC,CAAD,EAAE;AAAK,WAAA,CAAC,CAAC,UAAD,CAAD,KAAA,CAAA;AAAmB,GAAjC,CAAZ;AACD","sourcesContent":["import { each, every, filter, isString } from '@antv/util';\nimport { LEVEL, log } from '../../utils';\nimport { Data } from '../../types';\nimport { PieOptions } from './types';\n\n/**\n * 获取总计值\n * @param data\n * @param field\n */\nexport function getTotalValue(data: Data, field: string) {\n  let total = null;\n  each(data, (item) => {\n    if (typeof item[field] === 'number') {\n      total += item[field];\n    }\n  });\n  return total;\n}\n\n/**\n * pie label offset adaptor\n */\nexport function adaptOffset(type: string, offset?: string | number): string | number {\n  let defaultOffset;\n  switch (type) {\n    case 'inner':\n      defaultOffset = '-30%';\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 > 0 ? defaultOffset : offset;\n      }\n      return offset < 0 ? offset : defaultOffset;\n    case 'outer':\n      defaultOffset = 12;\n      if (isString(offset) && offset.endsWith('%')) {\n        return parseFloat(offset) * 0.01 < 0 ? defaultOffset : offset;\n      }\n      return offset > 0 ? offset : defaultOffset;\n    default:\n      return offset;\n  }\n}\n\n/**\n * 处理不合法的数据(过滤 非数值型 和 NaN，保留 null)\n * @param data\n * @param angleField\n */\nexport function processIllegalData(data: PieOptions['data'], angleField: string) {\n  const processData = filter(data, (d) => {\n    const v = d[angleField];\n    return (typeof v === 'number' && !isNaN(v)) || v === null;\n  });\n\n  // 打印异常数据情况\n  log(LEVEL.WARN, processData.length === data.length, 'illegal data existed in chart data.');\n\n  return processData;\n}\n\n/**\n * 判断数据是否全部为 0\n * @param data\n * @param angleField\n */\nexport function isAllZero(data: PieOptions['data'], angleField: string): boolean {\n  return every(data, (d) => d[angleField] === 0);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}