{"ast":null,"code":"import { manager } from '@/service/api/v1/manager_pb';\nimport * as types from './types';\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys';\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\n\nconst getRoleListAction = res => {\n  return {\n    type: types.GET_ROLE_LIST,\n    data: res\n  };\n};\n\nexport const changeCheckedKeys = data => {\n  return {\n    type: types.CHANGE_CHECKED_KEYS,\n    data: data\n  };\n};\nexport function createRoleRequest(req) {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListRequest());\n        notification['success']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //更新\n\nexport function UpdateRoleRequest(req) {\n  return dispatch => {\n    axios({\n      method: 'put',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListRequest());\n        notification['success']({\n          message: '信息提示',\n          description: \"更新成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //查询角色列表\n\n_c = UpdateRoleRequest;\nexport function getRoleListRequest() {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: api.role,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.GetRoleListResponse.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListAction(ret.data));\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //删除角色\n\nexport function deleteRoleRequest(req) {\n  return dispatch => {\n    axios({\n      method: 'delete',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListRequest());\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //角色绑定菜单\n\nexport function RoleBindMenuRequest(req) {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: api.roleBindMenu,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"操作成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //角色绑定菜单\n\n_c2 = RoleBindMenuRequest;\nexport function getRoleBindMenuRequest(req) {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: api.roleBindMenu + '/' + req.id,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.GetRoleBindMenuResponse.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        const checkedKeys = ret.data.split(',');\n        console.log(checkedKeys);\n        dispatch(changeCheckedKeys(checkedKeys));\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateRoleRequest\");\n$RefreshReg$(_c2, \"RoleBindMenuRequest\");","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/role/store/actions.ts"],"names":["manager","types","axios","camelcaseKeys","api","notification","getRoleListAction","res","type","GET_ROLE_LIST","data","changeCheckedKeys","CHANGE_CHECKED_KEYS","createRoleRequest","req","dispatch","method","url","role","headers","localStorage","getItem","then","ret","Response","fromObject","deep","status","success","getRoleListRequest","message","description","catch","removeItem","window","globalHistory","push","UpdateRoleRequest","GetRoleListResponse","deleteRoleRequest","RoleBindMenuRequest","roleBindMenu","getRoleBindMenuRequest","id","GetRoleBindMenuResponse","checkedKeys","split","console","log"],"mappings":"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","sourcesContent":["import { manager } from '@/service/api/v1/manager_pb'\nimport * as types from './types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { Dispatch } from \"redux\"\n\nconst getRoleListAction = (res: manager.IRole[]): types.GetRoleListAction => {\n  return {\n    type: types.GET_ROLE_LIST,\n    data: res\n  }\n}\n\nexport const changeCheckedKeys = (data: any): types.ChangeCheckedKeysAction => {\n  return {\n    type: types.CHANGE_CHECKED_KEYS,\n    data: data\n  }\n}\n\nexport function createRoleRequest(req: manager.IRole) {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'post',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IResponse =\n        manager.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListRequest())\n        notification['success']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//更新\nexport function UpdateRoleRequest(req: manager.IRole) {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'put',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IResponse =\n        manager.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListRequest())\n        notification['success']({\n          message: '信息提示',\n          description: \"更新成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//查询角色列表\nexport function getRoleListRequest() {\n  return (dispatch: types.GetRoleDispatch) => {\n    axios({\n      method: 'get',\n      url: api.role,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IGetRoleListResponse =\n        manager.GetRoleListResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListAction(ret.data as manager.IRole[]))\n\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//删除角色\nexport function deleteRoleRequest(req: manager.IRoleId) {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'delete',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IResponse =\n        manager.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getRoleListRequest())\n\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//角色绑定菜单\nexport function RoleBindMenuRequest(req: manager.IRoleBindMenuRequest) {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'post',\n      url: api.roleBindMenu,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IResponse =\n        manager.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"操作成功\"\n        });\n\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//角色绑定菜单\nexport function getRoleBindMenuRequest(req: manager.IRoleId) {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'get',\n      url: api.roleBindMenu + '/' + req.id,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret: manager.IGetRoleBindMenuResponse =\n        manager.GetRoleBindMenuResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        const checkedKeys = (ret.data as string).split(',')\n        console.log(checkedKeys)\n        dispatch(changeCheckedKeys(checkedKeys))\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}