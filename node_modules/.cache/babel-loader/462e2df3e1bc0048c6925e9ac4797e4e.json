{"ast":null,"code":"import { shakebook } from '@/service/api/v1/account_pb';\nimport * as types from './types';\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys';\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { manager } from '@/service/api/v1/manager_pb';\nimport * as tree from '@/common/toTree';\n\nconst getAccountAction = res => {\n  return {\n    type: types.GET_ACCOUNT,\n    data: { ...res\n    }\n  };\n};\n\nconst getAccountMenuAction = data => {\n  return {\n    type: types.GET_ACCOUNT_MENU,\n    data: [...data]\n  };\n};\n\nexport function getAccountRequest() {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: api.getAccount,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = shakebook.GetAccountResponse.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountAction(ret.data));\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //查询账号菜单\n\nexport function getAccountMenuRequest() {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: api.getAccountMenu,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.GetAccountMenuResponse.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        data = tree.toTree(res.data);\n        dispatch(getAccountMenuAction(data));\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n} //退出登录\n\nexport function signoutRequest() {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: api.signout,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = shakebook.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountAction({}));\n        localStorage.removeItem(\"token\");\n        window.globalHistory.push('/login');\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function () {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n}","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/src/pages/home/header/store/actions.ts"],"names":["shakebook","types","axios","camelcaseKeys","api","notification","manager","tree","getAccountAction","res","type","GET_ACCOUNT","data","getAccountMenuAction","GET_ACCOUNT_MENU","getAccountRequest","dispatch","method","url","getAccount","headers","localStorage","getItem","then","ret","GetAccountResponse","fromObject","deep","status","success","message","description","catch","removeItem","window","globalHistory","push","getAccountMenuRequest","getAccountMenu","GetAccountMenuResponse","toTree","signoutRequest","signout","Response"],"mappings":"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","sourcesContent":["import { shakebook } from '@/service/api/v1/account_pb'\nimport * as types from './types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { manager } from '@/service/api/v1/manager_pb';\nimport * as tree from '@/common/toTree';\n\nconst getAccountAction = (res: shakebook.IAccountInfo): types.GetAccountAction => {\n  return {\n    type: types.GET_ACCOUNT,\n    data: { ...res }\n  }\n}\n\nconst getAccountMenuAction = (data: manager.IMenuInfo[]): types.GetAccountMenuAction => {\n  return {\n    type: types.GET_ACCOUNT_MENU,\n    data: [...data]\n  }\n}\n\nexport function getAccountRequest() {\n  return (dispatch: types.GetAccountDispatch) => {\n    axios({\n      method: 'get',\n      url: api.getAccount,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: shakebook.IGetAccountResponse =\n        shakebook.GetAccountResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountAction(ret.data!))\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//查询账号菜单\nexport function getAccountMenuRequest() {\n  return (dispatch: types.GetAccountMenuDispatch) => {\n    axios({\n      method: 'get',\n      url: api.getAccountMenu,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: manager.IGetAccountMenuResponse =\n        manager.GetAccountMenuResponse.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n      if (res.status === 200 && ret.success) {\n        data = tree.toTree(res.data)\n        dispatch(getAccountMenuAction(data))\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}\n\n//退出登录\nexport function signoutRequest() {\n  return (dispatch: types.GetAccountDispatch) => {\n    axios({\n      method: 'post',\n      url: api.signout,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: shakebook.IResponse =\n        shakebook.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getAccountAction({} as shakebook.AccountInfo))\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function () {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}