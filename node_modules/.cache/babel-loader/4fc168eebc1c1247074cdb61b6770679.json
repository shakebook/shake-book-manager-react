{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_TOOLTIP_OPTIONS } from './constants';\nimport { getTinyData } from './utils';\n\nvar TinyLine =\n/** @class */\nfunction (_super) {\n  __extends(TinyLine, _super);\n\n  function TinyLine() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'tiny-line';\n    return _this;\n  }\n  /**\n   * @override\n   * @param data\n   */\n\n\n  TinyLine.prototype.changeData = function (data) {\n    this.updateOption({\n      data: data\n    });\n    this.chart.changeData(getTinyData(data));\n  };\n\n  TinyLine.prototype.getDefaultOptions = function () {\n    return {\n      appendPadding: 2,\n      tooltip: __assign({}, DEFAULT_TOOLTIP_OPTIONS),\n      animation: true\n    };\n  };\n  /**\n   * 获取 迷你折线图 的适配器\n   */\n\n\n  TinyLine.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return TinyLine;\n}(Plot);\n\nexport { TinyLine };","map":{"version":3,"sources":["../../../src/plots/tiny-line/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,uBAAT,QAAwC,aAAxC;AACA,SAAS,WAAT,QAA4B,SAA5B;;AAIA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAA9B,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,WAAf;;AA2BR;AAzBC;;;AAGG;;;AACI,EAAA,QAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,IAAlB,EAA+C;AAC7C,SAAK,YAAL,CAAkB;AAAE,MAAA,IAAI,EAAA;AAAN,KAAlB;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,WAAW,CAAC,IAAD,CAAjC;AACD,GAHM;;AAKG,EAAA,QAAA,CAAA,SAAA,CAAA,iBAAA,GAAV,YAAA;AACE,WAAO;AACL,MAAA,aAAa,EAAE,CADV;AAEL,MAAA,OAAO,EAAA,QAAA,CAAA,EAAA,EACF,uBADE,CAFF;AAKL,MAAA,SAAS,EAAE;AALN,KAAP;AAOD,GARS;AAUV;;AAEG;;;AACO,EAAA,QAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,QAAA;AAAC,CA7BD,CAA8B,IAA9B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { TinyLineOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { DEFAULT_TOOLTIP_OPTIONS } from './constants';\nimport { getTinyData } from './utils';\n\nexport { TinyLineOptions };\n\nexport class TinyLine extends Plot<TinyLineOptions> {\n  /** 图表类型 */\n  public type: string = 'tiny-line';\n\n  /**\n   * @override\n   * @param data\n   */\n  public changeData(data: TinyLineOptions['data']) {\n    this.updateOption({ data });\n    this.chart.changeData(getTinyData(data));\n  }\n\n  protected getDefaultOptions() {\n    return {\n      appendPadding: 2,\n      tooltip: {\n        ...DEFAULT_TOOLTIP_OPTIONS,\n      },\n      animation: true,\n    };\n  }\n\n  /**\n   * 获取 迷你折线图 的适配器\n   */\n  protected getSchemaAdaptor(): Adaptor<TinyLineOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}