{"ast":null,"code":"import { isNaN } from '../../util/base';\n\nvar LayoutController =\n/** @class */\nfunction () {\n  function LayoutController(graph) {\n    this.graph = graph;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutType = this.layoutCfg.type;\n    this.initLayout();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  };\n\n  LayoutController.prototype.getLayoutType = function () {\n    return this.layoutCfg.type;\n  }; // 绘制\n\n\n  LayoutController.prototype.refreshLayout = function () {\n    var graph = this.graph;\n    if (!graph) return;\n\n    if (graph.get('animate')) {\n      graph.positionsAnimate();\n    } else {\n      graph.refreshPositions();\n    }\n  }; // 更换布局\n\n\n  LayoutController.prototype.changeLayout = function (layoutType) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod;\n\n    this.layoutType = layoutType;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutCfg.type = layoutType;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 更换数据\n\n\n  LayoutController.prototype.changeData = function () {\n    var layoutMethod = this.layoutMethod;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 销毁布局，不能使用 this.destroy，因为 controller 还需要被使用，只是把布局算法销毁\n\n\n  LayoutController.prototype.destroyLayout = function () {\n    var _a = this,\n        layoutMethod = _a.layoutMethod,\n        graph = _a.graph;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethod = undefined;\n  }; // 从 this.graph 获取数据\n\n\n  LayoutController.prototype.setDataFromGraph = function () {\n    var nodes = [];\n    var edges = [];\n    var combos = [];\n    var nodeItems = this.graph.getNodes();\n    var edgeItems = this.graph.getEdges();\n    var comboItems = this.graph.getCombos();\n    var nodeLength = nodeItems.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var nodeItem = nodeItems[i];\n      if (!nodeItem.isVisible()) continue;\n      var model = nodeItem.getModel();\n      nodes.push(model);\n    }\n\n    var edgeLength = edgeItems.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edgeItem = edgeItems[i];\n      if (!edgeItem || edgeItem.destroyed || !edgeItem.isVisible()) continue;\n      var model = edgeItem.getModel();\n      if (!model.isComboEdge) edges.push(model);\n    }\n\n    var comboLength = comboItems.length;\n\n    for (var i = 0; i < comboLength; i++) {\n      var comboItem = comboItems[i];\n      if (comboItem.destroyed || !comboItem.isVisible()) continue;\n      var model = comboItem.getModel();\n      combos.push(model);\n    }\n\n    return {\n      nodes: nodes,\n      edges: edges,\n      combos: combos\n    };\n  }; // 重新布局\n\n\n  LayoutController.prototype.relayout = function (reloadData) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod,\n        layoutCfg = _a.layoutCfg;\n\n    if (reloadData) {\n      this.data = this.setDataFromGraph();\n      var nodes = this.data.nodes;\n\n      if (!nodes) {\n        return false;\n      }\n\n      this.initPositions(layoutCfg.center, nodes);\n      layoutMethod.init(this.data);\n    }\n\n    if (this.layoutType === 'force') {\n      layoutMethod.ticking = false;\n      layoutMethod.forceSimulation.stop();\n    }\n\n    graph.emit('beforelayout');\n    layoutMethod.execute(reloadData);\n    if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n  }; // 控制布局动画\n  // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.layoutAnimate = function () {}; // 将当前节点的平均中心移动到原点\n\n\n  LayoutController.prototype.moveToZero = function () {\n    var graph = this.graph;\n    var data = graph.get('data');\n    var nodes = data.nodes;\n\n    if (nodes[0].x === undefined || nodes[0].x === null || isNaN(nodes[0].x)) {\n      return;\n    }\n\n    var meanCenter = [0, 0];\n    var nodeLength = nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      meanCenter[0] += node.x;\n      meanCenter[1] += node.y;\n    }\n\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      node.x -= meanCenter[0];\n      node.y -= meanCenter[1];\n    }\n  }; // 初始化节点到 center 附近\n\n\n  LayoutController.prototype.initPositions = function (center, nodes) {\n    var graph = this.graph;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var allHavePos = true;\n    var width = graph.get('width') * 0.85;\n    var height = graph.get('height') * 0.85;\n    var nodeNum = nodes.length;\n    var horiNum = Math.ceil(Math.sqrt(nodeNum) * (width / height));\n    var vertiNum = Math.ceil(nodeNum / horiNum);\n    var horiGap = width / (horiNum - 1);\n    var vertiGap = height / (vertiNum - 1);\n    if (!isFinite(horiGap) || !horiGap) horiGap = 0;\n    if (!isFinite(vertiGap) || !horiGap) vertiGap = 0;\n    var beginX = center[0] - width / 2;\n    var beginY = center[1] - height / 2;\n    var nodeLength = nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n\n      if (isNaN(node.x)) {\n        allHavePos = false;\n        node.x = i % horiNum * horiGap + beginX;\n      }\n\n      if (isNaN(node.y)) {\n        allHavePos = false;\n        node.y = Math.floor(i / horiNum) * vertiGap + beginY;\n      }\n    }\n\n    return allHavePos;\n  };\n\n  LayoutController.prototype.destroy = function () {\n    var layoutMethod = this.layoutMethod;\n    this.graph = null;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n      layoutMethod.destroyed = true;\n    }\n\n    this.destroyed = true;\n  };\n\n  return LayoutController;\n}();\n\nexport default LayoutController;","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/node_modules/@antv/g6-core/es/graph/controller/layout.js"],"names":["isNaN","LayoutController","graph","layoutCfg","get","layoutType","type","initLayout","prototype","getLayoutType","refreshLayout","positionsAnimate","refreshPositions","changeLayout","_a","layoutMethod","destroy","layout","changeData","destroyLayout","set","undefined","setDataFromGraph","nodes","edges","combos","nodeItems","getNodes","edgeItems","getEdges","comboItems","getCombos","nodeLength","length","i","nodeItem","isVisible","model","getModel","push","edgeLength","edgeItem","destroyed","isComboEdge","comboLength","comboItem","relayout","reloadData","data","initPositions","center","init","ticking","forceSimulation","stop","emit","execute","isCustomLayout","onLayoutEnd","layoutAnimate","moveToZero","x","meanCenter","node","y","allHavePos","width","height","nodeNum","horiNum","Math","ceil","sqrt","vertiNum","horiGap","vertiGap","isFinite","beginX","beginY","floor"],"mappings":"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","sourcesContent":["import { isNaN } from '../../util/base';\n\nvar LayoutController =\n/** @class */\nfunction () {\n  function LayoutController(graph) {\n    this.graph = graph;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutType = this.layoutCfg.type;\n    this.initLayout();\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  };\n\n  LayoutController.prototype.getLayoutType = function () {\n    return this.layoutCfg.type;\n  }; // 绘制\n\n\n  LayoutController.prototype.refreshLayout = function () {\n    var graph = this.graph;\n    if (!graph) return;\n\n    if (graph.get('animate')) {\n      graph.positionsAnimate();\n    } else {\n      graph.refreshPositions();\n    }\n  }; // 更换布局\n\n\n  LayoutController.prototype.changeLayout = function (layoutType) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod;\n\n    this.layoutType = layoutType;\n    this.layoutCfg = graph.get('layout') || {};\n    this.layoutCfg.type = layoutType;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 更换数据\n\n\n  LayoutController.prototype.changeData = function () {\n    var layoutMethod = this.layoutMethod;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    this.layout();\n  }; // 销毁布局，不能使用 this.destroy，因为 controller 还需要被使用，只是把布局算法销毁\n\n\n  LayoutController.prototype.destroyLayout = function () {\n    var _a = this,\n        layoutMethod = _a.layoutMethod,\n        graph = _a.graph;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n    }\n\n    graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethod = undefined;\n  }; // 从 this.graph 获取数据\n\n\n  LayoutController.prototype.setDataFromGraph = function () {\n    var nodes = [];\n    var edges = [];\n    var combos = [];\n    var nodeItems = this.graph.getNodes();\n    var edgeItems = this.graph.getEdges();\n    var comboItems = this.graph.getCombos();\n    var nodeLength = nodeItems.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var nodeItem = nodeItems[i];\n      if (!nodeItem.isVisible()) continue;\n      var model = nodeItem.getModel();\n      nodes.push(model);\n    }\n\n    var edgeLength = edgeItems.length;\n\n    for (var i = 0; i < edgeLength; i++) {\n      var edgeItem = edgeItems[i];\n      if (!edgeItem || edgeItem.destroyed || !edgeItem.isVisible()) continue;\n      var model = edgeItem.getModel();\n      if (!model.isComboEdge) edges.push(model);\n    }\n\n    var comboLength = comboItems.length;\n\n    for (var i = 0; i < comboLength; i++) {\n      var comboItem = comboItems[i];\n      if (comboItem.destroyed || !comboItem.isVisible()) continue;\n      var model = comboItem.getModel();\n      combos.push(model);\n    }\n\n    return {\n      nodes: nodes,\n      edges: edges,\n      combos: combos\n    };\n  }; // 重新布局\n\n\n  LayoutController.prototype.relayout = function (reloadData) {\n    var _a = this,\n        graph = _a.graph,\n        layoutMethod = _a.layoutMethod,\n        layoutCfg = _a.layoutCfg;\n\n    if (reloadData) {\n      this.data = this.setDataFromGraph();\n      var nodes = this.data.nodes;\n\n      if (!nodes) {\n        return false;\n      }\n\n      this.initPositions(layoutCfg.center, nodes);\n      layoutMethod.init(this.data);\n    }\n\n    if (this.layoutType === 'force') {\n      layoutMethod.ticking = false;\n      layoutMethod.forceSimulation.stop();\n    }\n\n    graph.emit('beforelayout');\n    layoutMethod.execute(reloadData);\n    if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n  }; // 控制布局动画\n  // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.layoutAnimate = function () {}; // 将当前节点的平均中心移动到原点\n\n\n  LayoutController.prototype.moveToZero = function () {\n    var graph = this.graph;\n    var data = graph.get('data');\n    var nodes = data.nodes;\n\n    if (nodes[0].x === undefined || nodes[0].x === null || isNaN(nodes[0].x)) {\n      return;\n    }\n\n    var meanCenter = [0, 0];\n    var nodeLength = nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      meanCenter[0] += node.x;\n      meanCenter[1] += node.y;\n    }\n\n    meanCenter[0] /= nodes.length;\n    meanCenter[1] /= nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n      node.x -= meanCenter[0];\n      node.y -= meanCenter[1];\n    }\n  }; // 初始化节点到 center 附近\n\n\n  LayoutController.prototype.initPositions = function (center, nodes) {\n    var graph = this.graph;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var allHavePos = true;\n    var width = graph.get('width') * 0.85;\n    var height = graph.get('height') * 0.85;\n    var nodeNum = nodes.length;\n    var horiNum = Math.ceil(Math.sqrt(nodeNum) * (width / height));\n    var vertiNum = Math.ceil(nodeNum / horiNum);\n    var horiGap = width / (horiNum - 1);\n    var vertiGap = height / (vertiNum - 1);\n    if (!isFinite(horiGap) || !horiGap) horiGap = 0;\n    if (!isFinite(vertiGap) || !horiGap) vertiGap = 0;\n    var beginX = center[0] - width / 2;\n    var beginY = center[1] - height / 2;\n    var nodeLength = nodes.length;\n\n    for (var i = 0; i < nodeLength; i++) {\n      var node = nodes[i];\n\n      if (isNaN(node.x)) {\n        allHavePos = false;\n        node.x = i % horiNum * horiGap + beginX;\n      }\n\n      if (isNaN(node.y)) {\n        allHavePos = false;\n        node.y = Math.floor(i / horiNum) * vertiGap + beginY;\n      }\n    }\n\n    return allHavePos;\n  };\n\n  LayoutController.prototype.destroy = function () {\n    var layoutMethod = this.layoutMethod;\n    this.graph = null;\n\n    if (layoutMethod) {\n      layoutMethod.destroy();\n      layoutMethod.destroyed = true;\n    }\n\n    this.destroyed = true;\n  };\n\n  return LayoutController;\n}();\n\nexport default LayoutController;"]},"metadata":{},"sourceType":"module"}