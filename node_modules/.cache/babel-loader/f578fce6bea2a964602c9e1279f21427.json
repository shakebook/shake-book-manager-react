{"ast":null,"code":"import * as types from '@/pages/content/pages/account/store/types';\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys';\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\n\nconst getAccountListAction = res => {\n  return {\n    type: types.GET_ACCOUNT_LIST,\n    data: res\n  };\n};\n\nexport function getAccountListRequest() {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: api.accountList,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      let ret = manager.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getMenuListRequest());\n        notification['success']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function (err) {\n      localStorage.removeItem(\"token\");\n      window.globalHistory.push('/login');\n    });\n  };\n}","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/account/store/actions.ts"],"names":["types","axios","camelcaseKeys","api","notification","getAccountListAction","res","type","GET_ACCOUNT_LIST","data","getAccountListRequest","dispatch","method","url","accountList","headers","localStorage","getItem","then","ret","manager","Response","fromObject","deep","status","success","getMenuListRequest","message","description","catch","err","removeItem","window","globalHistory","push"],"mappings":"AACA,OAAO,KAAKA,KAAZ,MAAuB,2CAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,YAAT,QAA6B,MAA7B;;AAQA,MAAMC,oBAAoB,GAAIC,GAAD,IAA+D;AAC1F,SAAO;AACLC,IAAAA,IAAI,EAAEP,KAAK,CAACQ,gBADP;AAELC,IAAAA,IAAI,EAAEH;AAFD,GAAP;AAID,CALD;;AAOA,OAAO,SAASI,qBAAT,GAAiC;AACtC,SAAQC,QAAD,IAA6B;AAClCV,IAAAA,KAAK,CAAC;AACJW,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAEV,GAAG,CAACW,WAFL;AAGJC,MAAAA,OAAO,EAAE;AACP,+BAAuB,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAD5B;AAHL,KAAD,CAAL,CAMGC,IANH,CAMQ,UAAUZ,GAAV,EAAe;AAErB,UAAIa,GAAmC,GACrCC,OAAO,CAACC,QAAR,CAAiBC,UAAjB,CACEpB,aAAa,CAACI,GAAG,CAACG,IAAL,EAAqB;AAChCc,QAAAA,IAAI,EAAE;AAD0B,OAArB,CADf,CADF;;AAOA,UAAIjB,GAAG,CAACkB,MAAJ,KAAe,GAAf,IAAsBL,GAAG,CAACM,OAA9B,EAAuC;AACrCd,QAAAA,QAAQ,CAACe,kBAAkB,EAAnB,CAAR;AACAtB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtBuB,UAAAA,OAAO,EAAE,MADa;AAEtBC,UAAAA,WAAW,EAAE;AAFS,SAAxB;AAID,OAND,MAMO;AACLxB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtBuB,UAAAA,OAAO,EAAE,MADa;AAEtBC,UAAAA,WAAW,EAAET,GAAG,CAACQ;AAFK,SAAxB;AAID;AACF,KA3BD,EA4BGE,KA5BH,CA4BS,UAAUC,GAAV,EAAe;AACpBd,MAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AACAC,MAAAA,MAAM,CAACC,aAAP,CAAqBC,IAArB,CAA0B,QAA1B;AACD,KA/BH;AAgCD,GAjCD;AAkCD","sourcesContent":["import { shakebook } from '@/service/api/v1/account_pb'\nimport * as types from '@/pages/content/pages/account/store/types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { Dispatch } from \"redux\"\ndeclare global {\n  interface Window {\n    globalHistory: any\n  }\n}\n\nconst getAccountListAction = (res: shakebook.IAccountInfo[]): types.GetAccountListAction => {\n  return {\n    type: types.GET_ACCOUNT_LIST,\n    data: res\n  }\n}\n\nexport function getAccountListRequest() {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'get',\n      url: api.accountList,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n\n      let ret: manager.GetAccountListResponse =\n        manager.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        dispatch(getMenuListRequest())\n        notification['success']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function (err) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}