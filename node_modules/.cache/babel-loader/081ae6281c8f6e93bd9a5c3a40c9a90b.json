{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action } from '@antv/g2';\nimport { get, isArray } from '@antv/util';\nimport { transformData } from '../../utils';\n\nvar TreemapDrillDownAction =\n/** @class */\nfunction (_super) {\n  __extends(TreemapDrillDownAction, _super);\n\n  function TreemapDrillDownAction() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // 存储历史下钻 scale\n\n\n    _this.cacheDataStack = [];\n    return _this;\n  }\n\n  TreemapDrillDownAction.prototype.drill = function (data) {\n    var view = this.context.view;\n    var currentData = view.getData();\n    var groupScales = view.getGroupScales();\n    var hierarchyConfig = get(view, ['interactions', 'treemap-drill-down', 'cfg', 'hierarchyConfig'], {}); // 重新 update 数据\n\n    var drillData = transformData({\n      data: data,\n      colorField: get(groupScales, [0, 'field']),\n      openDrillDown: true,\n      hierarchyConfig: hierarchyConfig\n    });\n    view.changeData(drillData);\n    this.cacheDataStack.push(currentData);\n  };\n\n  TreemapDrillDownAction.prototype.click = function () {\n    var data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n    this.drill(data);\n  };\n\n  TreemapDrillDownAction.prototype.reset = function () {\n    var view = this.context.view;\n\n    if (!isArray(this.cacheDataStack) || this.cacheDataStack.length <= 0) {\n      return;\n    }\n\n    var cacheData = this.cacheDataStack.splice(this.cacheDataStack.length - 1, 1);\n    view.changeData(cacheData[0]);\n  };\n\n  return TreemapDrillDownAction;\n}(Action);\n\nexport { TreemapDrillDownAction };","map":{"version":3,"sources":["../../../../../src/plots/treemap/interactions/actions/treemap-drill-down-action.ts"],"names":[],"mappings":";AAAA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,GAAT,EAAc,OAAd,QAA6B,YAA7B;AACA,SAAS,aAAT,QAA8B,aAA9B;;AAEA,IAAA,sBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;;AAA5C,WAAA,sBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAAA,CACE;;;AACO,IAAA,KAAA,CAAA,cAAA,GAA0C,EAA1C;;AAoCR;;AAlCC,EAAA,sBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,IAAN,EAAU;AACA,QAAA,IAAI,GAAK,KAAK,OAAL,CAAL,IAAJ;AACR,QAAM,WAAW,GAAG,IAAI,CAAC,OAAL,EAApB;AACA,QAAM,WAAW,GAAG,IAAI,CAAC,cAAL,EAApB;AACA,QAAM,eAAe,GAAG,GAAG,CAAC,IAAD,EAAO,CAAC,cAAD,EAAiB,oBAAjB,EAAuC,KAAvC,EAA8C,iBAA9C,CAAP,EAAyE,EAAzE,CAA3B,CAJQ,CAMR;;AACA,QAAM,SAAS,GAAG,aAAa,CAAC;AAC9B,MAAA,IAAI,EAAA,IAD0B;AAE9B,MAAA,UAAU,EAAE,GAAG,CAAC,WAAD,EAAc,CAAC,CAAD,EAAI,OAAJ,CAAd,CAFe;AAG9B,MAAA,aAAa,EAAE,IAHe;AAI9B,MAAA,eAAe,EAAA;AAJe,KAAD,CAA/B;AAOA,IAAA,IAAI,CAAC,UAAL,CAAgB,SAAhB;AACA,SAAK,cAAL,CAAoB,IAApB,CAAyB,WAAzB;AACD,GAhBD;;AAkBO,EAAA,sBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,QAAM,IAAI,GAAG,GAAG,CAAC,KAAK,OAAN,EAAe,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,CAAf,CAAhB;AACA,QAAI,CAAC,IAAL,EAAW,OAAO,KAAP;AACX,SAAK,KAAL,CAAW,IAAX;AACD,GAJM;;AAMA,EAAA,sBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACU,QAAA,IAAI,GAAK,KAAK,OAAL,CAAL,IAAJ;;AACR,QAAI,CAAC,OAAO,CAAC,KAAK,cAAN,CAAR,IAAiC,KAAK,cAAL,CAAoB,MAApB,IAA8B,CAAnE,EAAsE;AACpE;AACD;;AAED,QAAM,SAAS,GAAG,KAAK,cAAL,CAAoB,MAApB,CAA2B,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAAxD,EAA2D,CAA3D,CAAlB;AAEA,IAAA,IAAI,CAAC,UAAL,CAAgB,SAAS,CAAC,CAAD,CAAzB;AACD,GATM;;AAUT,SAAA,sBAAA;AAAC,CAtCD,CAA4C,MAA5C,CAAA","sourcesContent":["import { Action } from '@antv/g2';\nimport { get, isArray } from '@antv/util';\nimport { transformData } from '../../utils';\n\nexport class TreemapDrillDownAction extends Action {\n  // 存储历史下钻 scale\n  public cacheDataStack: Record<string, any>[][] = [];\n\n  drill(data) {\n    const { view } = this.context;\n    const currentData = view.getData();\n    const groupScales = view.getGroupScales();\n    const hierarchyConfig = get(view, ['interactions', 'treemap-drill-down', 'cfg', 'hierarchyConfig'], {});\n\n    // 重新 update 数据\n    const drillData = transformData({\n      data,\n      colorField: get(groupScales, [0, 'field']),\n      openDrillDown: true,\n      hierarchyConfig,\n    });\n\n    view.changeData(drillData);\n    this.cacheDataStack.push(currentData);\n  }\n\n  public click() {\n    const data = get(this.context, ['event', 'data', 'data']);\n    if (!data) return false;\n    this.drill(data);\n  }\n\n  public reset() {\n    const { view } = this.context;\n    if (!isArray(this.cacheDataStack) || this.cacheDataStack.length <= 0) {\n      return;\n    }\n\n    const cacheData = this.cacheDataStack.splice(this.cacheDataStack.length - 1, 1);\n\n    view.changeData(cacheData[0]);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}