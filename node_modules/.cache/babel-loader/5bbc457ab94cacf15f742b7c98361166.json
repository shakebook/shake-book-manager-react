{"ast":null,"code":"import { manager } from '@/service/api/v1/manager_pb'; //import * as types from './types'\n\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys';\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nexport function createRoleRequest(req) {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      if (res.status === 401) {\n        localStorage.removeItem(\"token\");\n        window.globalHistory.push('/login');\n      }\n\n      let ret = manager.Response.fromObject(camelcaseKeys(res.data, {\n        deep: true\n      }));\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    }).catch(function (error) {\n      notification['error']({\n        message: '信息提示',\n        description: \"请稍后重试\"\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/yangjiafeng/web-src/shake-book-manager/src/pages/content/pages/menu/store/actions.ts"],"names":["manager","axios","camelcaseKeys","api","notification","createRoleRequest","req","dispatch","method","url","role","data","headers","localStorage","getItem","then","res","status","removeItem","window","globalHistory","push","ret","Response","fromObject","deep","success","message","description","catch","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,6BAAxB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,YAAT,QAA6B,MAA7B;AAOA,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAA4D;AACjE,SAAQC,QAAD,IAA6B;AAClCN,IAAAA,KAAK,CAAC;AACJO,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAEN,GAAG,CAACO,IAFL;AAGJC,MAAAA,IAAI,EAAEL,GAHF;AAIJM,MAAAA,OAAO,EAAE;AACP,+BAAuB,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAD5B;AAJL,KAAD,CAAL,CAOGC,IAPH,CAOQ,UAAUC,GAAV,EAAe;AACrB,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBJ,QAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACAC,QAAAA,MAAM,CAACC,aAAP,CAAqBC,IAArB,CAA0B,QAA1B;AACD;;AACD,UAAIC,GAAsB,GACxBtB,OAAO,CAACuB,QAAR,CAAiBC,UAAjB,CACEtB,aAAa,CAACc,GAAG,CAACL,IAAL,EAAqB;AAChCc,QAAAA,IAAI,EAAE;AAD0B,OAArB,CADf,CADF;;AAOA,UAAIT,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBK,GAAG,CAACI,OAA9B,EAAuC;AACrCtB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtBuB,UAAAA,OAAO,EAAE,MADa;AAEtBC,UAAAA,WAAW,EAAE;AAFS,SAAxB;AAID,OALD,MAKO;AACLxB,QAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACtBuB,UAAAA,OAAO,EAAE,MADa;AAEtBC,UAAAA,WAAW,EAAEN,GAAG,CAACK;AAFK,SAAxB;AAID;AACF,KA9BD,EA+BGE,KA/BH,CA+BS,UAAUC,KAAV,EAAiB;AACtB1B,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AACpBuB,QAAAA,OAAO,EAAE,MADW;AAEpBC,QAAAA,WAAW,EAAE;AAFO,OAAtB;AAID,KApCH;AAqCD,GAtCD;AAuCD","sourcesContent":["import { manager } from '@/service/api/v1/manager_pb'\n//import * as types from './types'\nimport axios from 'axios';\nimport camelcaseKeys from 'camelcase-keys'\nimport api from '@/requestAPI';\nimport { notification } from 'antd';\nimport { Dispatch } from \"redux\"\ndeclare global {\n  interface Window {\n    globalHistory: any\n  }\n}\nexport function createRoleRequest(req: manager.ICreateMenuRequest) {\n  return (dispatch: Dispatch<any>) => {\n    axios({\n      method: 'post',\n      url: api.role,\n      data: req,\n      headers: {\n        \"Grpc-metadata-token\": \"BEARER \" + localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      if (res.status === 401) {\n        localStorage.removeItem(\"token\")\n        window.globalHistory.push('/login')\n      }\n      let ret: manager.IResponse =\n        manager.Response.fromObject(\n          camelcaseKeys(res.data as Object, {\n            deep: true\n          }),\n        )\n\n      if (res.status === 200 && ret.success) {\n        notification['success']({\n          message: '信息提示',\n          description: \"新增成功\"\n        });\n      } else {\n        notification['warning']({\n          message: '信息提示',\n          description: ret.message\n        });\n      }\n    })\n      .catch(function (error) {\n        notification['error']({\n          message: '信息提示',\n          description: \"请稍后重试\"\n        });\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}