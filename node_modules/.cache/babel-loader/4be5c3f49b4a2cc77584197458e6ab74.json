{"ast":null,"code":"export var IInteractorEvent;\n\n(function (IInteractorEvent) {\n  IInteractorEvent[\"PANSTART\"] = \"PANSTART\";\n  IInteractorEvent[\"PANEND\"] = \"PANEND\";\n  IInteractorEvent[\"PANMOVE\"] = \"PANMOVE\";\n  IInteractorEvent[\"PINCH\"] = \"PINCH\";\n  IInteractorEvent[\"KEYDOWN\"] = \"KEYDOWN\";\n  IInteractorEvent[\"KEYUP\"] = \"KEYUP\";\n  IInteractorEvent[\"HOVER\"] = \"HOVER\";\n})(IInteractorEvent || (IInteractorEvent = {}));","map":{"version":3,"sources":["../../../src/services/interactor/IIteractorService.ts"],"names":["IInteractorEvent"],"mappings":"AAQA,OAAA,IAAA,gBAAA;;WAAYA,gB;AAAAA,EAAAA,gB,YAAAA,G,UAAAA;AAAAA,EAAAA,gB,UAAAA,G,QAAAA;AAAAA,EAAAA,gB,WAAAA,G,SAAAA;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;AAAAA,EAAAA,gB,WAAAA,G,SAAAA;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;GAAAA,gB,KAAAA,gB","sourcesContent":["export interface IInteractorService {\n  listen(canvas: HTMLCanvasElement): void;\n  disconnect(): void;\n  connect(): void;\n  destroy(): void;\n  on(event: IInteractorEvent, args?: unknown): void;\n}\n\nexport enum IInteractorEvent {\n  PANSTART = 'PANSTART',\n  PANEND = 'PANEND',\n  PANMOVE = 'PANMOVE',\n  PINCH = 'PINCH',\n  KEYDOWN = 'KEYDOWN',\n  KEYUP = 'KEYUP',\n  HOVER = 'HOVER',\n}\n"]},"metadata":{},"sourceType":"module"}