"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @fileoverview web worker for layout
 * @author changzhe.zb@antfin.com
 */
var registy_1 = require("../../registy");
var layoutConst_1 = require("./layoutConst");
var ctx = self;
function isLayoutMessage(event) {
    var type = event.data.type;
    return type === layoutConst_1.LAYOUT_MESSAGE.RUN || type === layoutConst_1.LAYOUT_MESSAGE.GPURUN;
}
function handleLayoutMessage(event) {
    var type = event.data.type;
    switch (type) {
        case layoutConst_1.LAYOUT_MESSAGE.RUN: {
            var _a = event.data, nodes = _a.nodes, edges = _a.edges, _b = _a.layoutCfg, layoutCfg = _b === void 0 ? {} : _b;
            var layoutType = layoutCfg.type;
            var LayoutClass = registy_1.getLayoutByName(layoutType); // tslint:disable-line
            if (!LayoutClass) {
                ctx.postMessage({ type: layoutConst_1.LAYOUT_MESSAGE.ERROR, message: "layout " + layoutType + " not found" });
                break;
            }
            var layoutMethod = new LayoutClass(layoutCfg);
            layoutMethod.init({ nodes: nodes, edges: edges });
            layoutMethod.execute();
            ctx.postMessage({ nodes: nodes, type: layoutConst_1.LAYOUT_MESSAGE.END });
            layoutMethod.destroy();
            break;
        }
        case layoutConst_1.LAYOUT_MESSAGE.GPURUN: {
            var _c = event.data, nodes = _c.nodes, edges = _c.edges, _d = _c.layoutCfg, layoutCfg = _d === void 0 ? {} : _d, canvas = _c.canvas;
            var layoutType = layoutCfg.type;
            var LayoutClass = registy_1.getLayoutByName(layoutType); // tslint:disable-line
            if (!LayoutClass) {
                ctx.postMessage({ type: layoutConst_1.LAYOUT_MESSAGE.ERROR, message: "layout " + layoutType + " not found" });
                break;
            }
            if (layoutType.split('-')[1] !== 'gpu') {
                ctx.postMessage({ type: layoutConst_1.LAYOUT_MESSAGE.ERROR, message: "layout " + layoutType + " does not support GPU" });
                break;
            }
            var layoutMethod = new LayoutClass(layoutCfg);
            layoutMethod.init({ nodes: nodes, edges: edges });
            layoutMethod.executeWithWorker(canvas, ctx);
            break;
        }
        default:
            break;
    }
}
// listen to message posted to web worker
ctx.onmessage = function (event) {
    if (isLayoutMessage(event)) {
        handleLayoutMessage(event);
    }
};
// https://stackoverflow.com/questions/50210416/webpack-worker-loader-fails-to-compile-typescript-worker
exports.default = null;
//# sourceMappingURL=layout.worker.js.map